{\rtf1\adeflang1025\ansi\ansicpg0\uc1\adeff31507\deff0\stshfdbch31505\stshfloch31506\stshfhich31506\stshfbi31507\deflang1104\deflangfe1104\themelang1104\themelangfe0\themelangcs0{\fonttbl{\f0\fbidi \froman\fcharset0\fprq2{\*\panose 02020603050405020304}Times New Roman;}{\f34\fbidi \froman\fcharset0\fprq2{\*\panose 02040503050406030204}Cambria Math;}
{\f37\fbidi \fswiss\fcharset0\fprq2{\*\panose 020f0502020204030204}Calibri;}{\flomajor\f31500\fbidi \froman\fcharset0\fprq2{\*\panose 02020603050405020304}Times New Roman;}
{\fdbmajor\f31501\fbidi \froman\fcharset0\fprq2{\*\panose 02020603050405020304}Times New Roman;}{\fhimajor\f31502\fbidi \fswiss\fcharset0\fprq2{\*\panose 020f0302020204030204}Calibri Light;}
{\fbimajor\f31503\fbidi \froman\fcharset0\fprq2{\*\panose 02020603050405020304}Times New Roman;}{\flominor\f31504\fbidi \froman\fcharset0\fprq2{\*\panose 02020603050405020304}Times New Roman;}
{\fdbminor\f31505\fbidi \froman\fcharset0\fprq2{\*\panose 02020603050405020304}Times New Roman;}{\fhiminor\f31506\fbidi \fswiss\fcharset0\fprq2{\*\panose 020f0502020204030204}Calibri;}
{\fbiminor\f31507\fbidi \froman\fcharset0\fprq2{\*\panose 02020603050405020304}Times New Roman;}{\f881\fbidi \froman\fcharset238\fprq2 Times New Roman CE;}{\f882\fbidi \froman\fcharset204\fprq2 Times New Roman Cyr;}
{\f884\fbidi \froman\fcharset161\fprq2 Times New Roman Greek;}{\f885\fbidi \froman\fcharset162\fprq2 Times New Roman Tur;}{\f886\fbidi \froman\fcharset177\fprq2 Times New Roman (Hebrew);}{\f887\fbidi \froman\fcharset178\fprq2 Times New Roman (Arabic);}
{\f888\fbidi \froman\fcharset186\fprq2 Times New Roman Baltic;}{\f889\fbidi \froman\fcharset163\fprq2 Times New Roman (Vietnamese);}{\f1221\fbidi \froman\fcharset238\fprq2 Cambria Math CE;}{\f1222\fbidi \froman\fcharset204\fprq2 Cambria Math Cyr;}
{\f1224\fbidi \froman\fcharset161\fprq2 Cambria Math Greek;}{\f1225\fbidi \froman\fcharset162\fprq2 Cambria Math Tur;}{\f1228\fbidi \froman\fcharset186\fprq2 Cambria Math Baltic;}{\f1229\fbidi \froman\fcharset163\fprq2 Cambria Math (Vietnamese);}
{\f1251\fbidi \fswiss\fcharset238\fprq2 Calibri CE;}{\f1252\fbidi \fswiss\fcharset204\fprq2 Calibri Cyr;}{\f1254\fbidi \fswiss\fcharset161\fprq2 Calibri Greek;}{\f1255\fbidi \fswiss\fcharset162\fprq2 Calibri Tur;}
{\f1256\fbidi \fswiss\fcharset177\fprq2 Calibri (Hebrew);}{\f1257\fbidi \fswiss\fcharset178\fprq2 Calibri (Arabic);}{\f1258\fbidi \fswiss\fcharset186\fprq2 Calibri Baltic;}{\f1259\fbidi \fswiss\fcharset163\fprq2 Calibri (Vietnamese);}
{\flomajor\f31508\fbidi \froman\fcharset238\fprq2 Times New Roman CE;}{\flomajor\f31509\fbidi \froman\fcharset204\fprq2 Times New Roman Cyr;}{\flomajor\f31511\fbidi \froman\fcharset161\fprq2 Times New Roman Greek;}
{\flomajor\f31512\fbidi \froman\fcharset162\fprq2 Times New Roman Tur;}{\flomajor\f31513\fbidi \froman\fcharset177\fprq2 Times New Roman (Hebrew);}{\flomajor\f31514\fbidi \froman\fcharset178\fprq2 Times New Roman (Arabic);}
{\flomajor\f31515\fbidi \froman\fcharset186\fprq2 Times New Roman Baltic;}{\flomajor\f31516\fbidi \froman\fcharset163\fprq2 Times New Roman (Vietnamese);}{\fdbmajor\f31518\fbidi \froman\fcharset238\fprq2 Times New Roman CE;}
{\fdbmajor\f31519\fbidi \froman\fcharset204\fprq2 Times New Roman Cyr;}{\fdbmajor\f31521\fbidi \froman\fcharset161\fprq2 Times New Roman Greek;}{\fdbmajor\f31522\fbidi \froman\fcharset162\fprq2 Times New Roman Tur;}
{\fdbmajor\f31523\fbidi \froman\fcharset177\fprq2 Times New Roman (Hebrew);}{\fdbmajor\f31524\fbidi \froman\fcharset178\fprq2 Times New Roman (Arabic);}{\fdbmajor\f31525\fbidi \froman\fcharset186\fprq2 Times New Roman Baltic;}
{\fdbmajor\f31526\fbidi \froman\fcharset163\fprq2 Times New Roman (Vietnamese);}{\fhimajor\f31528\fbidi \fswiss\fcharset238\fprq2 Calibri Light CE;}{\fhimajor\f31529\fbidi \fswiss\fcharset204\fprq2 Calibri Light Cyr;}
{\fhimajor\f31531\fbidi \fswiss\fcharset161\fprq2 Calibri Light Greek;}{\fhimajor\f31532\fbidi \fswiss\fcharset162\fprq2 Calibri Light Tur;}{\fhimajor\f31533\fbidi \fswiss\fcharset177\fprq2 Calibri Light (Hebrew);}
{\fhimajor\f31534\fbidi \fswiss\fcharset178\fprq2 Calibri Light (Arabic);}{\fhimajor\f31535\fbidi \fswiss\fcharset186\fprq2 Calibri Light Baltic;}{\fhimajor\f31536\fbidi \fswiss\fcharset163\fprq2 Calibri Light (Vietnamese);}
{\fbimajor\f31538\fbidi \froman\fcharset238\fprq2 Times New Roman CE;}{\fbimajor\f31539\fbidi \froman\fcharset204\fprq2 Times New Roman Cyr;}{\fbimajor\f31541\fbidi \froman\fcharset161\fprq2 Times New Roman Greek;}
{\fbimajor\f31542\fbidi \froman\fcharset162\fprq2 Times New Roman Tur;}{\fbimajor\f31543\fbidi \froman\fcharset177\fprq2 Times New Roman (Hebrew);}{\fbimajor\f31544\fbidi \froman\fcharset178\fprq2 Times New Roman (Arabic);}
{\fbimajor\f31545\fbidi \froman\fcharset186\fprq2 Times New Roman Baltic;}{\fbimajor\f31546\fbidi \froman\fcharset163\fprq2 Times New Roman (Vietnamese);}{\flominor\f31548\fbidi \froman\fcharset238\fprq2 Times New Roman CE;}
{\flominor\f31549\fbidi \froman\fcharset204\fprq2 Times New Roman Cyr;}{\flominor\f31551\fbidi \froman\fcharset161\fprq2 Times New Roman Greek;}{\flominor\f31552\fbidi \froman\fcharset162\fprq2 Times New Roman Tur;}
{\flominor\f31553\fbidi \froman\fcharset177\fprq2 Times New Roman (Hebrew);}{\flominor\f31554\fbidi \froman\fcharset178\fprq2 Times New Roman (Arabic);}{\flominor\f31555\fbidi \froman\fcharset186\fprq2 Times New Roman Baltic;}
{\flominor\f31556\fbidi \froman\fcharset163\fprq2 Times New Roman (Vietnamese);}{\fdbminor\f31558\fbidi \froman\fcharset238\fprq2 Times New Roman CE;}{\fdbminor\f31559\fbidi \froman\fcharset204\fprq2 Times New Roman Cyr;}
{\fdbminor\f31561\fbidi \froman\fcharset161\fprq2 Times New Roman Greek;}{\fdbminor\f31562\fbidi \froman\fcharset162\fprq2 Times New Roman Tur;}{\fdbminor\f31563\fbidi \froman\fcharset177\fprq2 Times New Roman (Hebrew);}
{\fdbminor\f31564\fbidi \froman\fcharset178\fprq2 Times New Roman (Arabic);}{\fdbminor\f31565\fbidi \froman\fcharset186\fprq2 Times New Roman Baltic;}{\fdbminor\f31566\fbidi \froman\fcharset163\fprq2 Times New Roman (Vietnamese);}
{\fhiminor\f31568\fbidi \fswiss\fcharset238\fprq2 Calibri CE;}{\fhiminor\f31569\fbidi \fswiss\fcharset204\fprq2 Calibri Cyr;}{\fhiminor\f31571\fbidi \fswiss\fcharset161\fprq2 Calibri Greek;}{\fhiminor\f31572\fbidi \fswiss\fcharset162\fprq2 Calibri Tur;}
{\fhiminor\f31573\fbidi \fswiss\fcharset177\fprq2 Calibri (Hebrew);}{\fhiminor\f31574\fbidi \fswiss\fcharset178\fprq2 Calibri (Arabic);}{\fhiminor\f31575\fbidi \fswiss\fcharset186\fprq2 Calibri Baltic;}
{\fhiminor\f31576\fbidi \fswiss\fcharset163\fprq2 Calibri (Vietnamese);}{\fbiminor\f31578\fbidi \froman\fcharset238\fprq2 Times New Roman CE;}{\fbiminor\f31579\fbidi \froman\fcharset204\fprq2 Times New Roman Cyr;}
{\fbiminor\f31581\fbidi \froman\fcharset161\fprq2 Times New Roman Greek;}{\fbiminor\f31582\fbidi \froman\fcharset162\fprq2 Times New Roman Tur;}{\fbiminor\f31583\fbidi \froman\fcharset177\fprq2 Times New Roman (Hebrew);}
{\fbiminor\f31584\fbidi \froman\fcharset178\fprq2 Times New Roman (Arabic);}{\fbiminor\f31585\fbidi \froman\fcharset186\fprq2 Times New Roman Baltic;}{\fbiminor\f31586\fbidi \froman\fcharset163\fprq2 Times New Roman (Vietnamese);}}
{\colortbl;\red0\green0\blue0;\red0\green0\blue255;\red0\green255\blue255;\red0\green255\blue0;\red255\green0\blue255;\red255\green0\blue0;\red255\green255\blue0;\red255\green255\blue255;\red0\green0\blue128;\red0\green128\blue128;\red0\green128\blue0;
\red128\green0\blue128;\red128\green0\blue0;\red128\green128\blue0;\red128\green128\blue128;\red192\green192\blue192;\red0\green0\blue0;\red0\green0\blue0;}{\*\defchp \fs22\loch\af31506\hich\af31506\dbch\af31505 }{\*\defpap 
\ql \li0\ri0\sa160\sl259\slmult1\widctlpar\wrapdefault\aspalpha\aspnum\faauto\adjustright\rin0\lin0\itap0 }\noqfpromote {\upr{\stylesheet{\ql \li0\ri0\sa160\sl259\slmult1\widctlpar\wrapdefault\aspalpha\aspnum\faauto\adjustright\rin0\lin0\itap0 
\rtlch\fcs1 \af31507\afs22\alang1025 \ltrch\fcs0 \fs22\lang1104\langfe1104\loch\f31506\hich\af31506\dbch\af31505\cgrid\langnp1104\langfenp1104 \snext0 \sqformat \spriority0 Normal;}{\*\cs10 \additive \sunhideused \spriority1 Default Paragraph Font;}{\*
\ts11\tsrowd\trftsWidthB3\trpaddl108\trpaddr108\trpaddfl3\trpaddft3\trpaddfb3\trpaddfr3\trcbpat1\trcfpat1\tblind0\tblindtype3\tsvertalt\tsbrdrt\tsbrdrl\tsbrdrb\tsbrdrr\tsbrdrdgl\tsbrdrdgr\tsbrdrh\tsbrdrv \ql \li0\ri0\sa160\sl259\slmult1
\widctlpar\wrapdefault\aspalpha\aspnum\faauto\adjustright\rin0\lin0\itap0 \rtlch\fcs1 \af31507\afs22\alang1025 \ltrch\fcs0 \fs22\lang1104\langfe1104\loch\f31506\hich\af31506\dbch\af31505\cgrid\langnp1104\langfenp1104 \snext11 \ssemihidden \sunhideused 
Normal Table;}}{\*\ud\uc0{\stylesheet{\ql \li0\ri0\sa160\sl259\slmult1\widctlpar\wrapdefault\aspalpha\aspnum\faauto\adjustright\rin0\lin0\itap0 \rtlch\fcs1 \af31507\afs22\alang1025 \ltrch\fcs0 
\fs22\lang1104\langfe1104\loch\f31506\hich\af31506\dbch\af31505\cgrid\langnp1104\langfenp1104 \snext0 \sqformat \spriority0 Normal;}{\*\cs10 \additive \sunhideused \spriority1 Default Paragraph Font;}{\*
\ts11\tsrowd\trftsWidthB3\trpaddl108\trpaddr108\trpaddfl3\trpaddft3\trpaddfb3\trpaddfr3\trcbpat1\trcfpat1\tblind0\tblindtype3\tsvertalt\tsbrdrt\tsbrdrl\tsbrdrb\tsbrdrr\tsbrdrdgl\tsbrdrdgr\tsbrdrh\tsbrdrv \ql \li0\ri0\sa160\sl259\slmult1
\widctlpar\wrapdefault\aspalpha\aspnum\faauto\adjustright\rin0\lin0\itap0 \rtlch\fcs1 \af31507\afs22\alang1025 \ltrch\fcs0 \fs22\lang1104\langfe1104\loch\f31506\hich\af31506\dbch\af31505\cgrid\langnp1104\langfenp1104 \snext11 \ssemihidden \sunhideused 
Normal Table;}}}}{\*\listtable{\list\listtemplateid1669988406\listhybrid{\listlevel\levelnfc0\levelnfcn0\leveljc0\leveljcn0\levelfollow0\levelstartat1\levelspace0\levelindent0{\leveltext\leveltemplateid72351759\'02{\uc1\u0 s.};}{\levelnumbers\'01;}
\rtlch\fcs1 \af0 \ltrch\fcs0 \fbias0 \fi-360\li720\lin720 }{\listlevel\levelnfc4\levelnfcn4\leveljc0\leveljcn0\levelfollow0\levelstartat1\lvltentative\levelspace0\levelindent0{\leveltext\leveltemplateid72351769\'02{\uc1\u1 s.};}{\levelnumbers\'01;}
\rtlch\fcs1 \af0 \ltrch\fcs0 \fi-360\li1440\lin1440 }{\listlevel\levelnfc2\levelnfcn2\leveljc2\leveljcn2\levelfollow0\levelstartat1\lvltentative\levelspace0\levelindent0{\leveltext\leveltemplateid72351771\'02{\uc1\u2 s.};}{\levelnumbers\'01;}\rtlch\fcs1 
\af0 \ltrch\fcs0 \fi-180\li2160\lin2160 }{\listlevel\levelnfc0\levelnfcn0\leveljc0\leveljcn0\levelfollow0\levelstartat1\lvltentative\levelspace0\levelindent0{\leveltext\leveltemplateid72351759\'02{\uc1\u3 s.};}{\levelnumbers\'01;}\rtlch\fcs1 \af0 
\ltrch\fcs0 \fi-360\li2880\lin2880 }{\listlevel\levelnfc4\levelnfcn4\leveljc0\leveljcn0\levelfollow0\levelstartat1\lvltentative\levelspace0\levelindent0{\leveltext\leveltemplateid72351769\'02{\uc1\u4 s.};}{\levelnumbers\'01;}\rtlch\fcs1 \af0 \ltrch\fcs0 
\fi-360\li3600\lin3600 }{\listlevel\levelnfc2\levelnfcn2\leveljc2\leveljcn2\levelfollow0\levelstartat1\lvltentative\levelspace0\levelindent0{\leveltext\leveltemplateid72351771\'02{\uc1\u5 s.};}{\levelnumbers\'01;}\rtlch\fcs1 \af0 \ltrch\fcs0 
\fi-180\li4320\lin4320 }{\listlevel\levelnfc0\levelnfcn0\leveljc0\leveljcn0\levelfollow0\levelstartat1\lvltentative\levelspace0\levelindent0{\leveltext\leveltemplateid72351759\'02{\uc1\u6 s.};}{\levelnumbers\'01;}\rtlch\fcs1 \af0 \ltrch\fcs0 
\fi-360\li5040\lin5040 }{\listlevel\levelnfc4\levelnfcn4\leveljc0\leveljcn0\levelfollow0\levelstartat1\lvltentative\levelspace0\levelindent0{\leveltext\leveltemplateid72351769\'02{\uc1\u7 s.};}{\levelnumbers\'01;}\rtlch\fcs1 \af0 \ltrch\fcs0 
\fi-360\li5760\lin5760 }{\listlevel\levelnfc2\levelnfcn2\leveljc2\leveljcn2\levelfollow0\levelstartat1\lvltentative\levelspace0\levelindent0{\leveltext\leveltemplateid72351771\'02{\uc1\u8 s.};}{\levelnumbers\'01;}\rtlch\fcs1 \af0 \ltrch\fcs0 
\fi-180\li6480\lin6480 }{\listname ;}\listid1749569778}}{\*\listoverridetable{\listoverride\listid1749569778\listoverridecount0\ls1}}{\*\rsidtbl \rsid356027\rsid3087240\rsid3998453\rsid4806431\rsid5185511\rsid9047506\rsid10552791\rsid12132913}{\mmathPr
\mmathFont34\mbrkBin0\mbrkBinSub0\msmallFrac0\mdispDef1\mlMargin0\mrMargin0\mdefJc1\mwrapIndent1440\mintLim0\mnaryLim1}{\info{\upr{\operator BatzoriG G}{\*\ud\uc0{\operator BatzoriG G}}}{\creatim\yr2022\mo1\dy16\hr21\min6}
{\revtim\yr2022\mo1\dy16\hr21\min42}{\version4}{\edmins36}{\nofpages7}{\nofwords3200}{\nofchars18240}{\upr{\nofcharsws21398}{\*\ud\uc0{\nofcharsws21398}}}{\vern39}}{\*\xmlnstbl {\xmlns1 http://schemas.microsoft.com/office/word/2003/wordml}}
\paperw12240\paperh15840\margl720\margr720\margt720\margb720\gutter0\ltrsect 
\widowctrl\ftnbj\aenddoc\trackmoves0\trackformatting1\donotembedsysfont0\relyonvml0\donotembedlingdata1\grfdocevents0\validatexml0\showplaceholdtext0\ignoremixedcontent0\saveinvalidxml0\showxmlerrors0\horzdoc\dghspace120\dgvspace120\dghorigin1701
\dgvorigin1984\dghshow0\dgvshow3\jcompress\viewkind1\viewscale77\rsidroot9047506 \nouicompat \fet0{\*\wgrffmtfilter 2450}\nofeaturethrottle1\ilfomacatclnup0\ltrpar \sectd \ltrsect\linex0\sectlinegrid299\sectdefaultcl\sectrsid3998453\sftnbj {\*\pnseclvl1
\pnucrm\pnstart1\pnindent720\pnhang {\pntxta .}}{\*\pnseclvl2\pnucltr\pnstart1\pnindent720\pnhang {\pntxta .}}{\*\pnseclvl3\pndec\pnstart1\pnindent720\pnhang {\pntxta .}}{\*\pnseclvl4\pnlcltr\pnstart1\pnindent720\pnhang {\pntxta )}}{\*\pnseclvl5
\pndec\pnstart1\pnindent720\pnhang {\pntxtb (}{\pntxta )}}{\*\pnseclvl6\pnlcltr\pnstart1\pnindent720\pnhang {\pntxtb (}{\pntxta )}}{\*\pnseclvl7\pnlcrm\pnstart1\pnindent720\pnhang {\pntxtb (}{\pntxta )}}{\*\pnseclvl8\pnlcltr\pnstart1\pnindent720\pnhang 
{\pntxtb (}{\pntxta )}}{\*\pnseclvl9\pnlcrm\pnstart1\pnindent720\pnhang {\pntxtb (}{\pntxta )}}\pard\plain \ltrpar\ql \li0\ri0\sa200\sl276\slmult1\nowidctlpar\wrapdefault\faauto\rin0\lin0\itap0 \rtlch\fcs1 \af31507\afs22\alang1025 \ltrch\fcs0 
\fs22\lang1104\langfe1104\loch\af31506\hich\af31506\dbch\af31505\cgrid\langnp1104\langfenp1104 {\rtlch\fcs1 \af37 \ltrch\fcs0 \f37\lang9\langfe1104\langnp9\insrsid5185511 \hich\af37\dbch\af31505\loch\f37 2D Arrays: Image Manipulation Project
\par \hich\af37\dbch\af31505\loch\f37 
In this project, you will be creating an application which is able to modify images as well as create new images using 2D arrays! The first section covers stretching the image horizontally, shrinking the image vertically, negating the color, applying a co
\hich\af37\dbch\af31505\loch\f37 l\hich\af37\dbch\af31505\loch\f37 
or filter, and inverting the image. The second section covers creating an image consisting of random pixels, placing a rectangle in the image, and using the method to randomly place many rectangles in the image.
\par \hich\af37\dbch\af31505\loch\f37 Here is an overview about how images work i\hich\af37\dbch\af31505\loch\f37 n Java:
\par \hich\af37\dbch\af31505\loch\f37 
Images consist of pixels which are the individual points in the image containing some color. Each pixel has some red, green, blue, and alpha value which represents the amount of each of those colors in the pixel. The red, green, and blue values ca
\hich\af37\dbch\af31505\loch\f37 
n be mixed to create all of the visible colors on your screen. The alpha value represents the transparency of the pixel (or how close the color of the pixel is to the background color of the image). A higher resolution image means that there are more pixe
\hich\af37\dbch\af31505\loch\f37 l\hich\af37\dbch\af31505\loch\f37 s contained within it.
\par \hich\af37\dbch\af31505\loch\f37 
In Java, a loaded image is stored into a BufferedImage object. From this object, we can extract each pixel value and store it into a 2D array which we can manipulate. The pixel values are stored as ints because each pixel value in t
\hich\af37\dbch\af31505\loch\f37 
he BufferedImage object is represented by a hexadecimal value which contains the red, green, blue, and alpha components. The maximum value of any of the RGBA values is 255 and the minimum is 0. There are some methods provided for you in this project which
\hich\af37\dbch\af31505\loch\f37  \hich\af37\dbch\af31505\loch\f37 handle the conversion between images and 2D arrays as well as extracting the R, G, B, and A values from a pixel. You will only need to implement methods which work with the 2D arrays.

\par \hich\af37\dbch\af31505\loch\f37 Each of these methods is executable independently so you can select whi\hich\af37\dbch\af31505\loch\f37 
ch methods you want to complete or you can complete all of them. You also may want to adjust the window sizes in the workspace to better see the code and the image. You can drag the window borders to adjust the size.
\par \hich\af37\dbch\af31505\loch\f37 There are a lot of different parts to \hich\af37\dbch\af31505\loch\f37 this project, so you may feel overwhelmed when first looking at it. Remember, the goal here is to practice using 2D arrays. We\hich\f37 \rquote 
\loch\f37 ve included the solution code as a file named Solution.java in case you get stuck.
\par \hich\af37\dbch\af31505\loch\f37 Tasks
\par \hich\af37\dbch\af31505\loch\f37 2/64 Complete
\par \hich\af37\dbch\af31505\loch\f37 Mark the tasks as complet\hich\af37\dbch\af31505\loch\f37 e by checking them off
\par \hich\af37\dbch\af31505\loch\f37 Provided Method Details
\par {\listtext\pard\plain\ltrpar \rtlch\fcs1 \af37\afs22 \ltrch\fcs0 \f37\fs22\lang9\langfe1104\langnp9 \hich\af37\dbch\af31505\loch\f37 1.\tab}}\pard \ltrpar\ql \fi-360\li720\ri0\sa200\sl276\slmult1
\nowidctlpar\wrapdefault\faauto\ls1\rin0\lin720\itap0\pararsid356027 {\rtlch\fcs1 \af37 \ltrch\fcs0 \f37\lang9\langfe1104\langnp9\insrsid5185511 \hich\af37\dbch\af31505\loch\f37 
The first two sections of this project have you investigating the code that we have provided for you. You won\hich\f37 \rquote \loch\f37 t need to write any code, but it\hich\f37 \rquote \loch\f37 
s important to understand the input and output of each of these\hich\af37\dbch\af31505\loch\f37  methods.
\par }\pard \ltrpar\ql \li0\ri0\sa200\sl276\slmult1\nowidctlpar\wrapdefault\faauto\rin0\lin0\itap0 {\rtlch\fcs1 \af37 \ltrch\fcs0 \f37\lang9\langfe1104\langnp9\insrsid5185511 \hich\af37\dbch\af31505\loch\f37 
There are four utility methods provided for you. The first method called imgToTwoD() accepts a String which can be a file path or image URL. It returns a 2D array of integers that contains every pixel from the image stored as int hexadecimal val
\hich\af37\dbch\af31505\loch\f37 
ues containing the RGBA values for the pixel. Take a look at how the method works in the code editor. In the main() method, we can load image data into a 2D array of ints using the imgToTwoD() method. Note that you can use one of the provided images or lo
\hich\af37\dbch\af31505\loch\f37 a\hich\af37\dbch\af31505\loch\f37 d one from a URL.
\par \hich\af37\dbch\af31505\loch\f37 We\hich\f37 \rquote \loch\f37 ve provided "./apple.jpg", "./flower.jpg", and "./kitten.jpg".
\par \hich\af37\dbch\af31505\loch\f37 2.}{\rtlch\fcs1 \af37 \ltrch\fcs0 \f37\lang9\langfe1104\langnp9\insrsid356027 \hich\af37\dbch\af31505\loch\f37  }{\rtlch\fcs1 \af37 \ltrch\fcs0 \f37\lang9\langfe1104\langnp9\insrsid5185511 \hich\af37\dbch\af31505\loch\f37 
The second provided method is called twoDToImage(). It accepts a 2D array of integers and a String for the file name. It converts the 2D array of int pixel data into a\hich\af37\dbch\af31505\loch\f37 n image and saves it.
\par \hich\af37\dbch\af31505\loch\f37 We\hich\f37 \rquote \loch\f37 ll use this method to create images after we modify the 2D array of ints.
\par \hich\af37\dbch\af31505\loch\f37 Take a look at how the method works in the code editor.
\par \hich\af37\dbch\af31505\loch\f37 3.}{\rtlch\fcs1 \af37 \ltrch\fcs0 \f37\lang9\langfe1104\langnp9\insrsid356027 \hich\af37\dbch\af31505\loch\f37  }{\rtlch\fcs1 \af37 \ltrch\fcs0 \f37\lang9\langfe1104\langnp9\insrsid5185511 \hich\af37\dbch\af31505\loch\f37 
The third provided method is the getRGBAFromPixel() method. This method accepts an int value representing the pixel hexadecimal value and returns a 4 element int array consisting of the R, G, B, and A values (between 0 and 255). Take a look at how the met
\hich\af37\dbch\af31505\loch\f37 h\hich\af37\dbch\af31505\loch\f37 od works in the code editor. In Java, pixels are stored as hexadecimal values. This method is used to extract the color components from the hexadecimal value for the pixel.
\par \hich\af37\dbch\af31505\loch\f37 4.}{\rtlch\fcs1 \af37 \ltrch\fcs0 \f37\lang9\langfe1104\langnp9\insrsid356027 \hich\af37\dbch\af31505\loch\f37  }{\rtlch\fcs1 \af37 \ltrch\fcs0 \f37\lang9\langfe1104\langnp9\insrsid5185511 \hich\af37\dbch\af31505\loch\f37 
The fourth provided method is the getColorIntValFromRGBA() method. This method \hich\af37\dbch\af31505\loch\f37 
accepts an array of integers that represent the RGBA values and convert it into a single int value representing the pixel hexadecimal value. Take a look at how the method works in the code editor. Since pixels in Java are stored as hexadecimal values, thi
\hich\af37\dbch\af31505\loch\f37 s\hich\af37\dbch\af31505\loch\f37  method converts the array of red, green, blue, and alpha values back into a hexadecimal value.
\par \hich\af37\dbch\af31505\loch\f37 5.}{\rtlch\fcs1 \af37 \ltrch\fcs0 \f37\lang9\langfe1104\langnp9\insrsid4806431 \hich\af37\dbch\af31505\loch\f37  }{\rtlch\fcs1 \af37 \ltrch\fcs0 \f37\lang9\langfe1104\langnp9\insrsid5185511 
\hich\af37\dbch\af31505\loch\f37 In addition to these utility methods, there is a method used for extracting a 3x3 section from the top left of the image called viewImageData. This method i\hich\af37\dbch\af31505\loch\f37 
s used to view the structure of the image data in both the raw pixel form and the extracted RGBA form. In the main() method, uncomment the call to viewImageData after the image is loaded (This should be line 14 if you haven\hich\f37 \rquote \loch\f37 
t edited the code yet). Save th\hich\af37\dbch\af31505\loch\f37 e\hich\af37\dbch\af31505\loch\f37  code and take a look at the console output.
\par \hich\af37\dbch\af31505\loch\f37 After looking at the output, feel free to re-comment this line of code to help clean up your output for the rest of the project.
\par \hich\af37\dbch\af31505\loch\f37 Example Method Walkthrough
\par \hich\af37\dbch\af31505\loch\f37 6.}{\rtlch\fcs1 \af37 \ltrch\fcs0 \f37\lang9\langfe1104\langnp9\insrsid356027 \hich\af37\dbch\af31505\loch\f37  }{\rtlch\fcs1 \af37 \ltrch\fcs0 \f37\lang9\langfe1104\langnp9\insrsid5185511 \hich\af37\dbch\af31505\loch\f37 
To start this project, we will look at an example \hich\af37\dbch\af31505\loch\f37 
of how to load, manipulate, and save an image step-by-step with provided code. We will look at the trimBorders() method. This method accepts a 2D array of int pixel data and the number of pixels to trim off of the borders of the image. It returns the modi
\hich\af37\dbch\af31505\loch\f37 f\hich\af37\dbch\af31505\loch\f37 ied image 2D array. Start by scrolling to where this method is defined in the project code.
\par \hich\af37\dbch\af31505\loch\f37 7.}{\rtlch\fcs1 \af37 \ltrch\fcs0 \f37\lang9\langfe1104\langnp9\insrsid356027 \hich\af37\dbch\af31505\loch\f37  }{\rtlch\fcs1 \af37 \ltrch\fcs0 \f37\lang9\langfe1104\langnp9\insrsid5185511 \hich\af37\dbch\af31505\loch\f37 
Try looking through the method and following along with the code. Look at how a portion of the original image is copied over to the new modified image. The inpu\hich\af37\dbch\af31505\loch\f37 
t of this method is a 2D array containing the input image data and the output of this method is a new 2D array representing the modified image. A detailed description of this method is in the hint for this task.
\par \hich\af37\dbch\af31505\loch\f37 The main takeaways are that given a 2D arra\hich\af37\dbch\af31505\loch\f37 y of ints, we make a new 2D array, and fill that array with some values from the given array. There\hich\f37 \rquote \loch\f37 
s some fancy math to make sure we fill the new array with the correct values, but the essential thing you should focus on is the fact that given a 2D array,\hich\af37\dbch\af31505\loch\f37  we return a new 2D array.
\par \hich\af37\dbch\af31505\loch\f37 8.}{\rtlch\fcs1 \af37 \ltrch\fcs0 \f37\lang9\langfe1104\langnp9\insrsid356027 \hich\af37\dbch\af31505\loch\f37  }{\rtlch\fcs1 \af37 \ltrch\fcs0 \f37\lang9\langfe1104\langnp9\insrsid5185511 \hich\af37\dbch\af31505\loch\f37 
Once we have completed iterating, we return the modified image data. Now scroll back to the main() method in the code.
\par \hich\af37\dbch\af31505\loch\f37 In the main() method, we load image data into a 2D array of ints using the imgToTwoD()\hich\af37\dbch\af31505\loch\f37 
 method. Note that you can use the provided image or load one from a URL. After this, we can simply call our method we created by passing in the loaded image data and storing the returned modified image data into a new 2D array of ints. Finally, we can ca
\hich\af37\dbch\af31505\loch\f37 l\hich\af37\dbch\af31505\loch\f37 l the twoDToImage() method using the modified image data to save the new image with a provided file name.
\par \hich\af37\dbch\af31505\loch\f37 9.}{\rtlch\fcs1 \af37 \ltrch\fcs0 \f37\lang9\langfe1104\langnp9\insrsid356027 \hich\af37\dbch\af31505\loch\f37  }{\rtlch\fcs1 \af37 \ltrch\fcs0 \f37\lang9\langfe1104\langnp9\insrsid5185511 \hich\af37\dbch\af31505\loch\f37 
Save the code in the editor which will run the application. Now we can view this modified image by entering the image file name which we saved into the browser on the side of the workspace. The project defaults to }{\field{\*\fldinst {\rtlch\fcs1 \af37 
\ltrch\fcs0 \f37\lang9\langfe1104\langnp9\insrsid5185511 \hich\af37\dbch\af31505\loch\f37 HYPERLINK http://localhost:8000/apple.jpg }{\rtlch\fcs1 \af37 \ltrch\fcs0 \f37\lang9\langfe1104\langnp9\insrsid9047506 {\*\datafield 
00d0c9ea79f9bace118c8200aa004ba90b0200000003000000e0c9ea79f9bace118c8200aa004ba90b5800000068007400740070003a002f002f006c006f00630061006c0068006f00730074003a0038003000300030002f006100700070006c0065002e006a00700067000000795881f43b1d7f48af2c825dc48527630000
0000a5ab0003}}}{\fldrslt {\rtlch\fcs1 \af37 \ltrch\fcs0 \f37\lang9\langfe1104\langnp9\insrsid5185511 \hich\af37\dbch\af31505\loch\f37 http://localhost:8000/apple.jpg}}}\sectd \ltrsect\linex0\sectlinegrid299\sectdefaultcl\sectrsid3998453\sftnbj {
\rtlch\fcs1 \af37 \ltrch\fcs0 \f37\lang9\langfe1104\langnp9\insrsid5185511 \hich\af37\dbch\af31505\loch\f37  so change the last part of the URL to match the\hich\af37\dbch\af31505\loch\f37 
 image name which was saved. Hit enter and the image will appear in the browser window. You can also try changing the file name and loading the image in the browser.
\par \hich\af37\dbch\af31505\loch\f37 Create a Negative Version of the Image
\par \hich\af37\dbch\af31505\loch\f37 10.}{\rtlch\fcs1 \af37 \ltrch\fcs0 \f37\lang9\langfe1104\langnp9\insrsid356027 \hich\af37\dbch\af31505\loch\f37  }{\rtlch\fcs1 \af37 \ltrch\fcs0 \f37\lang9\langfe1104\langnp9\insrsid5185511 
\hich\af37\dbch\af31505\loch\f37 Now let\hich\f37 \rquote \loch\f37 s fill in the negat\hich\af37\dbch\af31505\loch\f37 
iveColor() method. This method will replace the color of each pixel in the image with the negative version of the pixel. This means that each color component of the pixel (R, G, and B) will be replaced with 255 minus the current value. We\hich\f37 
\rquote \loch\f37 ll be aiming to \hich\af37\dbch\af31505\loch\f37 c\hich\af37\dbch\af31505\loch\f37 reate an image that looks like this:
\par \hich\af37\dbch\af31505\loch\f37 An image of an apple with its colors inverted
\par \hich\af37\dbch\af31505\loch\f37 Scroll down to where this method is defined.
\par \hich\af37\dbch\af31505\loch\f37 11.}{\rtlch\fcs1 \af37 \ltrch\fcs0 \f37\lang9\langfe1104\langnp9\insrsid356027 \hich\af37\dbch\af31505\loch\f37  }{\rtlch\fcs1 \af37 \ltrch\fcs0 \f37\lang9\langfe1104\langnp9\insrsid5185511 
\hich\af37\dbch\af31505\loch\f37 Begin by creating a new 2D array of ints which is the same size as the input image and setting up nested for loops that i\hich\af37\dbch\af31505\loch\f37 terate through every pixel in the input image. It\hich\f37 \rquote 
\loch\f37 s probably easiest to iterate through the pixels in row-major order.
\par \hich\af37\dbch\af31505\loch\f37 12.}{\rtlch\fcs1 \af37 \ltrch\fcs0 \f37\lang9\langfe1104\langnp9\insrsid356027 \hich\af37\dbch\af31505\loch\f37  }{\rtlch\fcs1 \af37 \ltrch\fcs0 \f37\lang9\langfe1104\langnp9\insrsid5185511 
\hich\af37\dbch\af31505\loch\f37 Within the inner for loop, we need to get the R, G, B, and A values from each pixel. You can use the provided met\hich\af37\dbch\af31505\loch\f37 
hod getRGBAFromPixel() to accomplish this. This returns an array where each of the four elements corresponds to the RGBA values. Elements 0 to 2 represent red, green, and blue while element 3 represents alpha. Using the method will look something like: in
\hich\af37\dbch\af31505\loch\f37 t\hich\af37\dbch\af31505\loch\f37 [] rgba = getRGBAFromPixel(imageTwoD[i][j]); depending on your iterator names.
\par 
\par \hich\af37\dbch\af31505\loch\f37 13.}{\rtlch\fcs1 \af37 \ltrch\fcs0 \f37\lang9\langfe1104\langnp9\insrsid356027 \hich\af37\dbch\af31505\loch\f37  }{\rtlch\fcs1 \af37 \ltrch\fcs0 \f37\lang9\langfe1104\langnp9\insrsid5185511 
\hich\af37\dbch\af31505\loch\f37 Now that you have the array containing the RGBA values, you need three lines of code which set the first three elements to 255 minus itself.
\par \hich\af37\dbch\af31505\loch\f37 14.}{\rtlch\fcs1 \af37 \ltrch\fcs0 \f37\lang9\langfe1104\langnp9\insrsid356027 \hich\af37\dbch\af31505\loch\f37  }{\rtlch\fcs1 \af37 \ltrch\fcs0 \f37\lang9\langfe1104\langnp9\insrsid5185511 
\hich\af37\dbch\af31505\loch\f37 Afterwards add another line of code which gets the int hexadecimal pixel data from the RGBA array. you can use the provided getColorIntValFromRGBA() method. You then need to store this value in the new image you created.

\par \hich\af37\dbch\af31505\loch\f37 15.}{\rtlch\fcs1 \af37 \ltrch\fcs0 \f37\lang9\langfe1104\langnp9\insrsid356027 \hich\af37\dbch\af31505\loch\f37  }{\rtlch\fcs1 \af37 \ltrch\fcs0 \f37\lang9\langfe1104\langnp9\insrsid5185511 
\hich\af37\dbch\af31505\loch\f37 Once the for loops are complete, you need to return the modified image. In the main() method, load an image and pass it into the negativeColor() method. Save the modified image and view it in the browser.
\par \hich\af37\dbch\af31505\loch\f37 Stretch the Image Horizontally
\par \hich\af37\dbch\af31505\loch\f37 16.}{\rtlch\fcs1 \af37 \ltrch\fcs0 \f37\lang9\langfe1104\langnp9\insrsid356027 \hich\af37\dbch\af31505\loch\f37  }{\rtlch\fcs1 \af37 \ltrch\fcs0 \f37\lang9\langfe1104\langnp9\insrsid5185511 
\hich\af37\dbch\af31505\loch\f37 For \hich\af37\dbch\af31505\loch\f37 
this task, you will be implementing the method stretchHorizontally(). This method will double the width of the provided image data. For every pixel in the original image, you will copy it and place two duplicate pixels side-by-side into the new modified i
\hich\af37\dbch\af31505\loch\f37 m\hich\af37\dbch\af31505\loch\f37 age. You\hich\f37 \rquote \loch\f37 ll be looking to create an image like this:A stretched apple
\par \hich\af37\dbch\af31505\loch\f37 In the code editor, scroll to this empty method.
\par \hich\af37\dbch\af31505\loch\f37 17.}{\rtlch\fcs1 \af37 \ltrch\fcs0 \f37\lang9\langfe1104\langnp9\insrsid356027 \hich\af37\dbch\af31505\loch\f37  }{\rtlch\fcs1 \af37 \ltrch\fcs0 \f37\lang9\langfe1104\langnp9\insrsid5185511 
\hich\af37\dbch\af31505\loch\f37 The first thing you should do in the method is to create a new 2D array of ints to hold the modified image data. The number of rows\hich\af37\dbch\af31505\loch\f37 
 (or height) should be the same, but the number of columns (or width) should be the twice the number of columns from the original image. You can set the new 2D array to equal: new int[imageTwoD.length][imageTwoD[0].length*2]
\par \hich\af37\dbch\af31505\loch\f37 18.}{\rtlch\fcs1 \af37 \ltrch\fcs0 \f37\lang9\langfe1104\langnp9\insrsid356027 \hich\af37\dbch\af31505\loch\f37  }{\rtlch\fcs1 \af37 \ltrch\fcs0 \f37\lang9\langfe1104\langnp9\insrsid5185511 
\hich\af37\dbch\af31505\loch\f37 Next, s\hich\af37\dbch\af31505\loch\f37 
et up nested for loops to iterate through every pixel in the input image using row-major order. To make things easier for us in the future, we can create an additional variable which will keep track of which position we are in for the modified image (sinc
\hich\af37\dbch\af31505\loch\f37 e\hich\af37\dbch\af31505\loch\f37 
 it is double the width). This variable will equal double the column index in the inner for loop. For example, if our inner loop is using columnIndex as the iterator. We can set our variable to equal: it = columnIndex*2;
\par \hich\af37\dbch\af31505\loch\f37 19.}{\rtlch\fcs1 \af37 \ltrch\fcs0 \f37\lang9\langfe1104\langnp9\insrsid356027 \hich\af37\dbch\af31505\loch\f37  }{\rtlch\fcs1 \af37 \ltrch\fcs0 \f37\lang9\langfe1104\langnp9\insrsid5185511 
\hich\af37\dbch\af31505\loch\f37 After we ha\hich\af37\dbch\af31505\loch\f37 
ve created that additional iterator, we can now copy and duplicate each pixel from the input image. We need two lines of code. One to copy the current pixel to the modifiedImage[rowIndex][it] position and one to copy the current pixel to the modifiedImage
\hich\af37\dbch\af31505\loch\f37 [\hich\af37\dbch\af31505\loch\f37 
rowIndex][it+1] position. it is the doubled iterator from the last step and the current pixel from the input image is accessed using the outer and inner loop iterators. In the example we can assume that those are rowIndex and columnIndex, but it depends o
\hich\af37\dbch\af31505\loch\f37 n\hich\af37\dbch\af31505\loch\f37  the variable names you use.
\par \hich\af37\dbch\af31505\loch\f37 20.}{\rtlch\fcs1 \af37 \ltrch\fcs0 \f37\lang9\langfe1104\langnp9\insrsid356027 \hich\af37\dbch\af31505\loch\f37  }{\rtlch\fcs1 \af37 \ltrch\fcs0 \f37\lang9\langfe1104\langnp9\insrsid5185511 
\hich\af37\dbch\af31505\loch\f37 
Once the for loops are complete, you need to return the modified image. Now in the main() method, you can load whatever image you want (either the provided image or one from a URL) as long as the resolution is not extremely high since the storage space of
\hich\af37\dbch\af31505\loch\f37  \hich\af37\dbch\af31505\loch\f37 
the workspace is limited. Pass the loaded image into the stretchHorizontally() method then click on the Save button in the workspace in order to run the code and save the image. Finally, enter the file name in the browser to view your modified image!

\par \hich\af37\dbch\af31505\loch\f37 Shrink the Image Vertically
\par \hich\af37\dbch\af31505\loch\f37 21.}{\rtlch\fcs1 \af37 \ltrch\fcs0 \f37\lang9\langfe1104\langnp9\insrsid356027 \hich\af37\dbch\af31505\loch\f37  }{\rtlch\fcs1 \af37 \ltrch\fcs0 \f37\lang9\langfe1104\langnp9\insrsid5185511 
\hich\af37\dbch\af31505\loch\f37 In order to shrink the image vertically, you will be halfing the height of the image and selecting every other pixel down each column to place in the modified image. We\hich\f37 \rquote \loch\f37 
re trying to create an image that looks \hich\af37\dbch\af31505\loch\f37 something like this (note that this ends up looking fairly similar to the stretched image!):An image of a shrunken apple
\par \hich\af37\dbch\af31505\loch\f37 This logic should be added in the shrinkVertically() method.
\par \hich\af37\dbch\af31505\loch\f37 22.}{\rtlch\fcs1 \af37 \ltrch\fcs0 \f37\lang9\langfe1104\langnp9\insrsid356027 \hich\af37\dbch\af31505\loch\f37  }{\rtlch\fcs1 \af37 \ltrch\fcs0 \f37\lang9\langfe1104\langnp9\insrsid5185511 
\hich\af37\dbch\af31505\loch\f37 Begin by creating a new 2D array of ints which has half the number o\hich\af37\dbch\af31505\loch\f37 f rows of the input image and the same number of columns.
\par \hich\af37\dbch\af31505\loch\f37 23.}{\rtlch\fcs1 \af37 \ltrch\fcs0 \f37\lang9\langfe1104\langnp9\insrsid356027 \hich\af37\dbch\af31505\loch\f37  }{\rtlch\fcs1 \af37 \ltrch\fcs0 \f37\lang9\langfe1104\langnp9\insrsid5185511 
\hich\af37\dbch\af31505\loch\f37 Next use nested for loops to iterate through each pixel in the input image using column-major order. Make the inner loop iterator increment by 2. We also need to end one pixe\hich\af37\dbch\af31505\loch\f37 
l early in the vertical direction. Since we divided the height of the image by two and we could be working with an odd number of pixels in the vertical direction, we want to make sure that we do not try and access an out of bounds element.
\par \hich\af37\dbch\af31505\loch\f37 24.}{\rtlch\fcs1 \af37 \ltrch\fcs0 \f37\lang9\langfe1104\langnp9\insrsid356027 \hich\af37\dbch\af31505\loch\f37  }{\rtlch\fcs1 \af37 \ltrch\fcs0 \f37\lang9\langfe1104\langnp9\insrsid5185511 
\hich\af37\dbch\af31505\loch\f37 Inside the inner for loop, place the current pixel from the input image at the row index divided by 2 and the current column index. For example: manipulatedImg[j/2][i] = imageTwoD[j][i];.
\par \hich\af37\dbch\af31505\loch\f37 25.}{\rtlch\fcs1 \af37 \ltrch\fcs0 \f37\lang9\langfe1104\langnp9\insrsid356027 \hich\af37\dbch\af31505\loch\f37  }{\rtlch\fcs1 \af37 \ltrch\fcs0 \f37\lang9\langfe1104\langnp9\insrsid5185511 
\hich\af37\dbch\af31505\loch\f37 Once the for loops are complete, you need to return the modified image. In the main() method, load an image and pass it into the shrinkVertically() method. Save the modified image and view it in the browser.
\par \hich\af37\dbch\af31505\loch\f37 Invert the Image
\par \hich\af37\dbch\af31505\loch\f37 26.}{\rtlch\fcs1 \af37 \ltrch\fcs0 \f37\lang9\langfe1104\langnp9\insrsid356027 \hich\af37\dbch\af31505\loch\f37  }{\rtlch\fcs1 \af37 \ltrch\fcs0 \f37\lang9\langfe1104\langnp9\insrsid5185511 
\hich\af37\dbch\af31505\loch\f37 Next, you will invert the \hich\af37\dbch\af31505\loch\f37 image. You will edit the invertImage() method in order to flip the image vertically and horizontally. Your final result should look something like this:
\par \hich\af37\dbch\af31505\loch\f37 An apple flipped horizontally and vertically
\par \hich\af37\dbch\af31505\loch\f37 27.}{\rtlch\fcs1 \af37 \ltrch\fcs0 \f37\lang9\langfe1104\langnp9\insrsid356027 \hich\af37\dbch\af31505\loch\f37  }{\rtlch\fcs1 \af37 \ltrch\fcs0 \f37\lang9\langfe1104\langnp9\insrsid5185511 
\hich\af37\dbch\af31505\loch\f37 Begin by creating a new 2D array which is the same s\hich\af37\dbch\af31505\loch\f37 ize as the input image.
\par \hich\af37\dbch\af31505\loch\f37 28.}{\rtlch\fcs1 \af37 \ltrch\fcs0 \f37\lang9\langfe1104\langnp9\insrsid356027 \hich\af37\dbch\af31505\loch\f37  }{\rtlch\fcs1 \af37 \ltrch\fcs0 \f37\lang9\langfe1104\langnp9\insrsid5185511 
\hich\af37\dbch\af31505\loch\f37 Next, iterate through each pixel in the input image using nested for loops.
\par \hich\af37\dbch\af31505\loch\f37 29.}{\rtlch\fcs1 \af37 \ltrch\fcs0 \f37\lang9\langfe1104\langnp9\insrsid356027 \hich\af37\dbch\af31505\loch\f37  }{\rtlch\fcs1 \af37 \ltrch\fcs0 \f37\lang9\langfe1104\langnp9\insrsid5185511 
\hich\af37\dbch\af31505\loch\f37 Within the inner for loop, you will copy the final row position minus the current row index and the final column position minus the column index. \hich\af37\dbch\af31505\loch\f37 
This is similar logic to the negativeColor() method, but taking the negative of the pixel positions instead of the color values. It will look something like this: invertedImg[i][j] = imageTwoD[(imageTwoD.length-1)-i][(imageTwoD[i].length-1)-j];. See the i
\hich\af37\dbch\af31505\loch\f37 m\hich\af37\dbch\af31505\loch\f37 age for an example of what takes place.
\par \hich\af37\dbch\af31505\loch\f37 Inverting an image
\par \hich\af37\dbch\af31505\loch\f37 In this image, the pixels are numbered to help show how they change position when the image is inverted.
\par \hich\af37\dbch\af31505\loch\f37 30.}{\rtlch\fcs1 \af37 \ltrch\fcs0 \f37\lang9\langfe1104\langnp9\insrsid356027 \hich\af37\dbch\af31505\loch\f37  }{\rtlch\fcs1 \af37 \ltrch\fcs0 \f37\lang9\langfe1104\langnp9\insrsid5185511 
\hich\af37\dbch\af31505\loch\f37 Once the for loops are complete, you need to return the modified image. In the main()\hich\af37\dbch\af31505\loch\f37 
 method, load an image and pass it into the invertImage() method. Save the modified image and view it in the browser.
\par \hich\af37\dbch\af31505\loch\f37 Applying a Color Filter
\par \hich\af37\dbch\af31505\loch\f37 31.}{\rtlch\fcs1 \af37 \ltrch\fcs0 \f37\lang9\langfe1104\langnp9\insrsid356027 \hich\af37\dbch\af31505\loch\f37  }{\rtlch\fcs1 \af37 \ltrch\fcs0 \f37\lang9\langfe1104\langnp9\insrsid5185511 
\hich\af37\dbch\af31505\loch\f37 For this task you will implement the colorFilter() method. This method modifies every pixel in the image by p\hich\af37\dbch\af31505\loch\f37 
rovided R, G, and B values as input parameters. You must make sure that each color value does not leave the range of 0-255.
\par \hich\af37\dbch\af31505\loch\f37 This is an example of a filter where the filter was -75, 30, -30 (Meaning the red values were decreased by 75, the green values were increased by 30, and the blue values were decreased by 30)
\par \hich\af37\dbch\af31505\loch\f37 A filtered apple
\par \hich\af37\dbch\af31505\loch\f37 32.}{\rtlch\fcs1 \af37 \ltrch\fcs0 \f37\lang9\langfe1104\langnp9\insrsid356027 \hich\af37\dbch\af31505\loch\f37  }{\rtlch\fcs1 \af37 \ltrch\fcs0 \f37\lang9\langfe1104\langnp9\insrsid5185511 
\hich\af37\dbch\af31505\loch\f37 Begin by creating a new 2D array which is\hich\af37\dbch\af31505\loch\f37  the same size as the input image.
\par \hich\af37\dbch\af31505\loch\f37 33.}{\rtlch\fcs1 \af37 \ltrch\fcs0 \f37\lang9\langfe1104\langnp9\insrsid356027 \hich\af37\dbch\af31505\loch\f37  }{\rtlch\fcs1 \af37 \ltrch\fcs0 \f37\lang9\langfe1104\langnp9\insrsid5185511 
\hich\af37\dbch\af31505\loch\f37 Loop through each pixel in the input image using nested for loops.
\par \hich\af37\dbch\af31505\loch\f37 34.}{\rtlch\fcs1 \af37 \ltrch\fcs0 \f37\lang9\langfe1104\langnp9\insrsid356027 \hich\af37\dbch\af31505\loch\f37  }{\rtlch\fcs1 \af37 \ltrch\fcs0 \f37\lang9\langfe1104\langnp9\insrsid5185511 
\hich\af37\dbch\af31505\loch\f37 For every pixel in the input image, extract the RGBA color values using the provided method getRGBAFromPixel().
\par \hich\af37\dbch\af31505\loch\f37 35.}{\rtlch\fcs1 \af37 \ltrch\fcs0 \f37\lang9\langfe1104\langnp9\insrsid356027 \hich\af37\dbch\af31505\loch\f37  }{\rtlch\fcs1 \af37 \ltrch\fcs0 \f37\lang9\langfe1104\langnp9\insrsid5185511 
\hich\af37\dbch\af31505\loch\f37 After re\hich\af37\dbch\af31505\loch\f37 trieving the array of RGBA data, store the values of each color plus the modifier value (which can be positive or negative).
\par \hich\af37\dbch\af31505\loch\f37 36.}{\rtlch\fcs1 \af37 \ltrch\fcs0 \f37\lang9\langfe1104\langnp9\insrsid356027 \hich\af37\dbch\af31505\loch\f37  }{\rtlch\fcs1 \af37 \ltrch\fcs0 \f37\lang9\langfe1104\langnp9\insrsid5185511 
\hich\af37\dbch\af31505\loch\f37 For each of the new color values, test that it does not go outside of the range 0 to 255. If it is less tha\hich\af37\dbch\af31505\loch\f37 n 0, set it equal to 0. If it is greater than 255, set it equal to 255.
\par \hich\af37\dbch\af31505\loch\f37 37.}{\rtlch\fcs1 \af37 \ltrch\fcs0 \f37\lang9\langfe1104\langnp9\insrsid356027 \hich\af37\dbch\af31505\loch\f37  }{\rtlch\fcs1 \af37 \ltrch\fcs0 \f37\lang9\langfe1104\langnp9\insrsid5185511 
\hich\af37\dbch\af31505\loch\f37 Set the values in the RGBA array to equal the new color values which you calculated.
\par \hich\af37\dbch\af31505\loch\f37 38.}{\rtlch\fcs1 \af37 \ltrch\fcs0 \f37\lang9\langfe1104\langnp9\insrsid356027 \hich\af37\dbch\af31505\loch\f37  }{\rtlch\fcs1 \af37 \ltrch\fcs0 \f37\lang9\langfe1104\langnp9\insrsid5185511 
\hich\af37\dbch\af31505\loch\f37 Convert the RGBA array to a single int containing the hexadecimal pixel data using the provided method getColorIntValFromRGBA() and store it in the new image.
\par \hich\af37\dbch\af31505\loch\f37 39.}{\rtlch\fcs1 \af37 \ltrch\fcs0 \f37\lang9\langfe1104\langnp9\insrsid356027 \hich\af37\dbch\af31505\loch\f37  }{\rtlch\fcs1 \af37 \ltrch\fcs0 \f37\lang9\langfe1104\langnp9\insrsid5185511 
\hich\af37\dbch\af31505\loch\f37 Once the for loops are complete, you need to return the modified image. I\hich\af37\dbch\af31505\loch\f37 
n the main() method, load an image and pass it into the colorFilter() method along with modifier values for red, green, and blue. Save the modified image and view it in the browser.
\par \hich\af37\dbch\af31505\loch\f37 Further Challenges: Painting an Image of Random Colors
\par \hich\af37\dbch\af31505\loch\f37 40.}{\rtlch\fcs1 \af37 \ltrch\fcs0 \f37\lang9\langfe1104\langnp9\insrsid356027 \hich\af37\dbch\af31505\loch\f37  }{\rtlch\fcs1 \af37 \ltrch\fcs0 \f37\lang9\langfe1104\langnp9\insrsid5185511 
\hich\af37\dbch\af31505\loch\f37 Good Job! You \hich\af37\dbch\af31505\loch\f37 
have finished the image processing application! You have seen how images can be converted to 2D arrays of pixels in order to modify them. You got to write methods that manipulate images. Feel free to keep adding to, and experimenting with, your image proc
\hich\af37\dbch\af31505\loch\f37 e\hich\af37\dbch\af31505\loch\f37 ssing application!
\par \hich\af37\dbch\af31505\loch\f37 In the next sections, we dive into how to use the Random class to paint random shapes on your images. Consider these sections to be further challenges \hich\f37 \emdash \loch\f37  if you\hich\f37 \rquote \loch\f37 
re looking for more practice with 2D arrays, these may prove to be interesti\hich\af37\dbch\af31505\loch\f37 ng challenges, but if you\hich\f37 \rquote \loch\f37 re feeling worn out, this is a good time to take a break or move on to the next lesson!

\par \hich\af37\dbch\af31505\loch\f37 The next method you will be implementing is the paintRandomImage() method. It will modify the image passed in by replacing every pixel with a\hich\af37\dbch\af31505\loch\f37  randomly colored pixel.
\par \hich\af37\dbch\af31505\loch\f37 41.}{\rtlch\fcs1 \af37 \ltrch\fcs0 \f37\lang9\langfe1104\langnp9\insrsid356027 \hich\af37\dbch\af31505\loch\f37  }{\rtlch\fcs1 \af37 \ltrch\fcs0 \f37\lang9\langfe1104\langnp9\insrsid5185511 
\hich\af37\dbch\af31505\loch\f37 Begin by creating a new object of the Random class. This class will be used to generate random numbers for us: Random rand = new Random();.
\par \hich\af37\dbch\af31505\loch\f37 42.}{\rtlch\fcs1 \af37 \ltrch\fcs0 \f37\lang9\langfe1104\langnp9\insrsid356027 \hich\af37\dbch\af31505\loch\f37  }{\rtlch\fcs1 \af37 \ltrch\fcs0 \f37\lang9\langfe1104\langnp9\insrsid5185511 
\hich\af37\dbch\af31505\loch\f37 Next, iterate through each pixel in the provided image using nested for loops.
\par \hich\af37\dbch\af31505\loch\f37 4\hich\af37\dbch\af31505\loch\f37 3.}{\rtlch\fcs1 \af37 \ltrch\fcs0 \f37\lang9\langfe1104\langnp9\insrsid356027 \hich\af37\dbch\af31505\loch\f37  }{\rtlch\fcs1 \af37 \ltrch\fcs0 
\f37\lang9\langfe1104\langnp9\insrsid5185511 \hich\af37\dbch\af31505\loch\f37 
Within the inner for loop, we need to generate a randomly colored pixel. In order to do this, we can use rand.nextInt(256). This will generate a random integer between 0 and 255. Store three of these random ints by calling rand.nextInt(256) three times.

\par \hich\af37\dbch\af31505\loch\f37 44.}{\rtlch\fcs1 \af37 \ltrch\fcs0 \f37\lang9\langfe1104\langnp9\insrsid356027 \hich\af37\dbch\af31505\loch\f37  }{\rtlch\fcs1 \af37 \ltrch\fcs0 \f37\lang9\langfe1104\langnp9\insrsid5185511 
\hich\af37\dbch\af31505\loch\f37 The three randomly generated values will need to be the first, second, and third elements in a new int array. The fourth element should be 255 since that represents the alpha value (which controls transparency).
\par \hich\af37\dbch\af31505\loch\f37 45.}{\rtlch\fcs1 \af37 \ltrch\fcs0 \f37\lang9\langfe1104\langnp9\insrsid356027 \hich\af37\dbch\af31505\loch\f37  }{\rtlch\fcs1 \af37 \ltrch\fcs0 \f37\lang9\langfe1104\langnp9\insrsid5185511 
\hich\af37\dbch\af31505\loch\f37 After storing those \hich\af37\dbch\af31505\loch\f37 
values in an int array, pass it into the provided getColorIntValFromRGBA() method and store it into the input image. Note that this is accessing the input image instead of a newly created image like in the image manipulation methods.
\par \hich\af37\dbch\af31505\loch\f37 46.}{\rtlch\fcs1 \af37 \ltrch\fcs0 \f37\lang9\langfe1104\langnp9\insrsid356027 \hich\af37\dbch\af31505\loch\f37  }{\rtlch\fcs1 \af37 \ltrch\fcs0 \f37\lang9\langfe1104\langnp9\insrsid5185511 
\hich\af37\dbch\af31505\loch\f37 Once the for loops are complete, return the modified input image.
\par \hich\af37\dbch\af31505\loch\f37 47.}{\rtlch\fcs1 \af37 \ltrch\fcs0 \f37\lang9\langfe1104\langnp9\insrsid356027 \hich\af37\dbch\af31505\loch\f37  }{\rtlch\fcs1 \af37 \ltrch\fcs0 \f37\lang9\langfe1104\langnp9\insrsid5185511 
\hich\af37\dbch\af31505\loch\f37 In the main() method, create a new 2D array of ints which will be our blank canvas for the painting methods. 500x500 is a good size for it. Pass the new 2D array into the paintRandomI\hich\af37\dbch\af31505\loch\f37 
mage() method. Save the image and view it in the browser.
\par \hich\af37\dbch\af31505\loch\f37 Drawing a Rectangle on an Image
\par \hich\af37\dbch\af31505\loch\f37 48.}{\rtlch\fcs1 \af37 \ltrch\fcs0 \f37\lang9\langfe1104\langnp9\insrsid356027 \hich\af37\dbch\af31505\loch\f37  }{\rtlch\fcs1 \af37 \ltrch\fcs0 \f37\lang9\langfe1104\langnp9\insrsid5185511 
\hich\af37\dbch\af31505\loch\f37 You will be implementing a method that draws a rectangle on an image using a provided width, height, rowPosition, columnPosition, and color. T\hich\af37\dbch\af31505\loch\f37 
he image below shows what each of the input parameter does when creating the rectangle.
\par \hich\af37\dbch\af31505\loch\f37 Input parameters for the rectangle
\par \hich\af37\dbch\af31505\loch\f37 It\hich\f37 \rquote \loch\f37 s useful to think of these rectangles being drawn from the top left corner.
\par \hich\af37\dbch\af31505\loch\f37 49.}{\rtlch\fcs1 \af37 \ltrch\fcs0 \f37\lang9\langfe1104\langnp9\insrsid356027 \hich\af37\dbch\af31505\loch\f37  }{\rtlch\fcs1 \af37 \ltrch\fcs0 \f37\lang9\langfe1104\langnp9\insrsid5185511 
\hich\af37\dbch\af31505\loch\f37 Begin by iterating through every pixel in the input image using nested for loops.
\par \hich\af37\dbch\af31505\loch\f37 50.}{\rtlch\fcs1 \af37 \ltrch\fcs0 \f37\lang9\langfe1104\langnp9\insrsid356027 \hich\af37\dbch\af31505\loch\f37  }{\rtlch\fcs1 \af37 \ltrch\fcs0 \f37\lang9\langfe1104\langnp9\insrsid5185511 
\hich\af37\dbch\af31505\loch\f37 For every pixel, check if the current row index is greater than or equal to the provided rowPosition and also that the index is less than or equal to the rowPosition plu\hich\af37\dbch\af31505\loch\f37 
s the width: i>=rowPosition && i<=rowPosition + width.
\par \hich\af37\dbch\af31505\loch\f37 51.}{\rtlch\fcs1 \af37 \ltrch\fcs0 \f37\lang9\langfe1104\langnp9\insrsid356027 \hich\af37\dbch\af31505\loch\f37  }{\rtlch\fcs1 \af37 \ltrch\fcs0 \f37\lang9\langfe1104\langnp9\insrsid5185511 
\hich\af37\dbch\af31505\loch\f37 Additionally, check if the current column index is greater than or equal to the provided colPosition and also that the index is less than or equal to the colPosition plus the height: j>=colPositio
\hich\af37\dbch\af31505\loch\f37 n && j<=colPosition + height.
\par \hich\af37\dbch\af31505\loch\f37 52.}{\rtlch\fcs1 \af37 \ltrch\fcs0 \f37\lang9\langfe1104\langnp9\insrsid356027 \hich\af37\dbch\af31505\loch\f37  }{\rtlch\fcs1 \af37 \ltrch\fcs0 \f37\lang9\langfe1104\langnp9\insrsid5185511 
\hich\af37\dbch\af31505\loch\f37 If both of the previous tests are true, then paint the pixel the provided color since the pixel position lies within the rectangle shape.
\par \hich\af37\dbch\af31505\loch\f37 53.}{\rtlch\fcs1 \af37 \ltrch\fcs0 \f37\lang9\langfe1104\langnp9\insrsid356027 \hich\af37\dbch\af31505\loch\f37  }{\rtlch\fcs1 \af37 \ltrch\fcs0 \f37\lang9\langfe1104\langnp9\insrsid5185511 
\hich\af37\dbch\af31505\loch\f37 Once the iterations are complete, return the modified input\hich\af37\dbch\af31505\loch\f37  image.
\par \hich\af37\dbch\af31505\loch\f37 54.}{\rtlch\fcs1 \af37 \ltrch\fcs0 \f37\lang9\langfe1104\langnp9\insrsid356027 \hich\af37\dbch\af31505\loch\f37  }{\rtlch\fcs1 \af37 \ltrch\fcs0 \f37\lang9\langfe1104\langnp9\insrsid5185511 
\hich\af37\dbch\af31505\loch\f37 In the main() method, pass an image into the paintRectangle() method and save the image. Enter in the desired values for your rectangle. You can create a color using an array such as: int[] rgba = \{255, 255, 0, 255\}
; and passing it into the ge\hich\af37\dbch\af31505\loch\f37 tColorIntValFromRGBA() method. Save the image and view it in the browser.
\par \hich\af37\dbch\af31505\loch\f37 Create Abstract Geometric Art Utilizing the paintRectangle Method
\par \hich\af37\dbch\af31505\loch\f37 55.}{\rtlch\fcs1 \af37 \ltrch\fcs0 \f37\lang9\langfe1104\langnp9\insrsid356027 \hich\af37\dbch\af31505\loch\f37  }{\rtlch\fcs1 \af37 \ltrch\fcs0 \f37\lang9\langfe1104\langnp9\insrsid5185511 
\hich\af37\dbch\af31505\loch\f37 Finally, you will implement the generateRectangles() method. This will use the paintRectangl\hich\af37\dbch\af31505\loch\f37 
es() method you created in order to paint a piece of art. It will generate randomly positioned, sized, and colored rectangles based on the provided number. The input parameter, numRectangles will determine how many randomly generated rectangles will be pl
\hich\af37\dbch\af31505\loch\f37 a\hich\af37\dbch\af31505\loch\f37 ced in the image.
\par \hich\af37\dbch\af31505\loch\f37 56.}{\rtlch\fcs1 \af37 \ltrch\fcs0 \f37\lang9\langfe1104\langnp9\insrsid356027 \hich\af37\dbch\af31505\loch\f37  }{\rtlch\fcs1 \af37 \ltrch\fcs0 \f37\lang9\langfe1104\langnp9\insrsid5185511 
\hich\af37\dbch\af31505\loch\f37 Firstly, create an object of the Random class to use.
\par \hich\af37\dbch\af31505\loch\f37 57.}{\rtlch\fcs1 \af37 \ltrch\fcs0 \f37\lang9\langfe1104\langnp9\insrsid356027 \hich\af37\dbch\af31505\loch\f37  }{\rtlch\fcs1 \af37 \ltrch\fcs0 \f37\lang9\langfe1104\langnp9\insrsid5185511 
\hich\af37\dbch\af31505\loch\f37 Next, iterate for the number of rectangles provided using a for loop.
\par \hich\af37\dbch\af31505\loch\f37 58.}{\rtlch\fcs1 \af37 \ltrch\fcs0 \f37\lang9\langfe1104\langnp9\insrsid356027 \hich\af37\dbch\af31505\loch\f37  }{\rtlch\fcs1 \af37 \ltrch\fcs0 \f37\lang9\langfe1104\langnp9\insrsid5185511 
\hich\af37\dbch\af31505\loch\f37 
Generate and store two random integers for the width and height of the rectangle. For width, pass in the number of columns in the 2D array to the rand.nextInt(num) method. For height, pass in the number of rows into the rand.nextInt(num) method.
\par \hich\af37\dbch\af31505\loch\f37 59.}{\rtlch\fcs1 \af37 \ltrch\fcs0 \f37\lang9\langfe1104\langnp9\insrsid356027 \hich\af37\dbch\af31505\loch\f37  }{\rtlch\fcs1 \af37 \ltrch\fcs0 \f37\lang9\langfe1104\langnp9\insrsid5185511 
\hich\af37\dbch\af31505\loch\f37 
Generate and store two random integers for the row position and column position. For row position, pass in the number of rows in the image minus the randomly generated height from the previous step. This will ensure that the rectangle does no
\hich\af37\dbch\af31505\loch\f37 
t get created outside of the image. For the column position generate a random integer using the number of columns in the image minus the randomly generated width from the last step. The following image shows why we perform this calculation.
\par \hich\af37\dbch\af31505\loch\f37 Image showing \hich\af37\dbch\af31505\loch\f37 rectangle bounds
\par \hich\af37\dbch\af31505\loch\f37 
In this image, the starting position of the rectangle can only be inside the shaded box. If we were to try to put the top left corner outside the shaded box, part of the rectangle would be drawn outside of the image, and we would get an e
\hich\af37\dbch\af31505\loch\f37 rror.
\par \hich\af37\dbch\af31505\loch\f37 60.}{\rtlch\fcs1 \af37 \ltrch\fcs0 \f37\lang9\langfe1104\langnp9\insrsid356027 \hich\af37\dbch\af31505\loch\f37  }{\rtlch\fcs1 \af37 \ltrch\fcs0 \f37\lang9\langfe1104\langnp9\insrsid5185511 
\hich\af37\dbch\af31505\loch\f37 
Next, create a random color to paint the rectangle. You can do this in a similar way to the method used in paintRandomImage() make sure the three random color values are between 0 and 255. Store them in an array with 255 for t
\hich\af37\dbch\af31505\loch\f37 he A value and convert it to the int value using getColorIntValFromRGBA.
\par \hich\af37\dbch\af31505\loch\f37 61.}{\rtlch\fcs1 \af37 \ltrch\fcs0 \f37\lang9\langfe1104\langnp9\insrsid356027 \hich\af37\dbch\af31505\loch\f37  }{\rtlch\fcs1 \af37 \ltrch\fcs0 \f37\lang9\langfe1104\langnp9\insrsid5185511 
\hich\af37\dbch\af31505\loch\f37 Finally, call the paintRectangle() method using all of the values and the input image and overwrite the input image.
\par \hich\af37\dbch\af31505\loch\f37 62.}{\rtlch\fcs1 \af37 \ltrch\fcs0 \f37\lang9\langfe1104\langnp9\insrsid356027 \hich\af37\dbch\af31505\loch\f37  }{\rtlch\fcs1 \af37 \ltrch\fcs0 \f37\lang9\langfe1104\langnp9\insrsid5185511 
\hich\af37\dbch\af31505\loch\f37 After the iterations are complete, return the modified input image.
\par \hich\af37\dbch\af31505\loch\f37 63.}{\rtlch\fcs1 \af37 \ltrch\fcs0 \f37\lang9\langfe1104\langnp9\insrsid356027 \hich\af37\dbch\af31505\loch\f37  }{\rtlch\fcs1 \af37 \ltrch\fcs0 \f37\lang9\langfe1104\langnp9\insrsid5185511 
\hich\af37\dbch\af31505\loch\f37 In the main() method, pass an image into t\hich\af37\dbch\af31505\loch\f37 
he generateRectangles() method and a number of rectangles to generate, 1000 rectangles is a good number to use. Save the image and view the image in the browser.
\par \hich\af37\dbch\af31505\loch\f37 Conclusion
\par \hich\af37\dbch\af31505\loch\f37 64.}{\rtlch\fcs1 \af37 \ltrch\fcs0 \f37\lang9\langfe1104\langnp9\insrsid356027 \hich\af37\dbch\af31505\loch\f37  }{\rtlch\fcs1 \af37 \ltrch\fcs0 \f37\lang9\langfe1104\langnp9\insrsid5185511 
\hich\af37\dbch\af31505\loch\f37 Wow, you made it through the bonus work. Pat yourself on the back, this was qu\hich\af37\dbch\af31505\loch\f37 ite a difficult project! Reflect on all the different ways you used loops and 2D arrays to create these images.
}{\rtlch\fcs1 \af37 \ltrch\fcs0 \f37\lang9\langfe1104\langnp9\insrsid5185511 
\par }{\*\themedata 504b030414000600080000002100e9de0fbfff0000001c020000130000005b436f6e74656e745f54797065735d2e786d6cac91cb4ec3301045f748fc83e52d4a
9cb2400825e982c78ec7a27cc0c8992416c9d8b2a755fbf74cd25442a820166c2cd933f79e3be372bd1f07b5c3989ca74aaff2422b24eb1b475da5df374fd9ad
5689811a183c61a50f98f4babebc2837878049899a52a57be670674cb23d8e90721f90a4d2fa3802cb35762680fd800ecd7551dc18eb899138e3c943d7e503b6
b01d583deee5f99824e290b4ba3f364eac4a430883b3c092d4eca8f946c916422ecab927f52ea42b89a1cd59c254f919b0e85e6535d135a8de20f20b8c12c3b0
0c895fcf6720192de6bf3b9e89ecdbd6596cbcdd8eb28e7c365ecc4ec1ff1460f53fe813d3cc7f5b7f020000ffff0300504b030414000600080000002100a5d6
a7e7c0000000360100000b0000005f72656c732f2e72656c73848fcf6ac3300c87ef85bd83d17d51d2c31825762fa590432fa37d00e1287f68221bdb1bebdb4f
c7060abb0884a4eff7a93dfeae8bf9e194e720169aaa06c3e2433fcb68e1763dbf7f82c985a4a725085b787086a37bdbb55fbc50d1a33ccd311ba548b6309512
0f88d94fbc52ae4264d1c910d24a45db3462247fa791715fd71f989e19e0364cd3f51652d73760ae8fa8c9ffb3c330cc9e4fc17faf2ce545046e37944c69e462
a1a82fe353bd90a865aad41ed0b5b8f9d6fd010000ffff0300504b0304140006000800000021006b799616830000008a0000001c0000007468656d652f746865
6d652f7468656d654d616e616765722e786d6c0ccc4d0ac3201040e17da17790d93763bb284562b2cbaebbf600439c1a41c7a0d29fdbd7e5e38337cedf14d59b
4b0d592c9c070d8a65cd2e88b7f07c2ca71ba8da481cc52c6ce1c715e6e97818c9b48d13df49c873517d23d59085adb5dd20d6b52bd521ef2cdd5eb9246a3d8b
4757e8d3f729e245eb2b260a0238fd010000ffff0300504b030414000600080000002100b6f4679893070000c9200000160000007468656d652f7468656d652f
7468656d65312e786d6cec59cd8b1bc915bf07f23f347d97f5d5ad8fc1f2a24fcfda33b6b164873dd648a5eef2547789aad28cc56208de532e81c026e49085bd
ed21842cecc22eb9e48f31d8249b3f22afaa5bdd5552c99e191c3061463074977eefd5afde7bf5de53d5ddcf5e26d4bbc05c1096f6fcfa9d9aefe174ce16248d
7afeb3d9a4d2f13d2151ba4094a5b8e76fb0f03fbbf7eb5fdd454732c609f6403e1547a8e7c752ae8eaa5531876124eeb0154ee1bb25e30992f0caa3ea82a34b
d09bd06aa3566b55134452df4b51026a1f2f97648ebd9952e9dfdb2a1f53784da5500373caa74a35b6243476715e5708b11143cabd0b447b3eccb3609733fc52
fa1e4542c2173dbfa6fffceabdbb5574940b517940d6909be8bf5c2e17589c37f49c3c3a2b260d823068f50bfd1a40e53e6edc1eb7c6ad429f06a0f91c569a71
b175b61bc320c71aa0ecd1a17bd41e35eb16ded0dfdce3dc0fd5c7c26b50a63fd8c34f2643b0a285d7a00c1feee1c3417730b2f56b50866fede1dbb5fe28685b
fa3528a6243ddf43d7c25673b85d6d0159327aec8477c360d26ee4ca4b144443115d6a8a254be5a1584bd00bc6270050408a24493db959e1259a43140f112567
9c7827248a21f056286502866b8ddaa4d684ffea13e827ed5174849121ad780113b137a4f87862cec94af6fc07a0d537206f7ffef9cdeb1fdfbcfee9cd575fbd
79fdf77c6eadca923b466964cafdf2dd1ffef3cd6fbd7ffff0ed2f5fff319b7a172f4cfcbbbffdeedd3ffef93ef5b0e2d2146ffff4fdbb1fbf7ffbe7dfffebaf
5f3bb4f7393a33e1339260e13dc297de5396c0021dfcf119bf9ec42c46c494e8a791402952b338f48f656ca11f6d10450edc00db767cce21d5b880f7d72f2cc2
d398af2571687c182716f094313a60dc6985876a2ec3ccb3751ab927e76b13f714a10bd7dc43945a5e1eaf579063894be530c616cd2714a5124538c5d253dfb1
738c1dabfb8210cbaea764ce99604be97d41bc01224e93ccc899154da5d03149c02f1b1741f0b7659bd3e7de8051d7aa47f8c246c2de40d4417e86a965c6fb68
2d51e252394309350d7e8264ec2239ddf0b9891b0b099e8e3065de78818570c93ce6b05ec3e90f21cdb8dd7e4a37898de4929cbb749e20c64ce4889d0f6394ac
5cd829496313fbb938871045de13265df05366ef10f50e7e40e941773f27d872f787b3c133c8b026a53240d4376beef0e57dccacf89d6ee8126157aae9f3c44a
b17d4e9cd131584756689f604cd1255a60ec3dfbdcc160c05696cd4bd20f62c82ac7d815580f901dabea3dc5027a25d5dcece7c91322ac909de2881de073bad9
493c1b9426881fd2fc08bc6eda7c0ca52e7105c0633a3f37818f08f480102f4ea33c16a0c308ee835a9fc4c82a60ea5db8e375c32dff5d658fc1be7c61d1b8c2
be04197c6d1948eca6cc7b6d3343d49aa00c9819822ec3956e41c4727f29a28aab165b3be596f6a62ddd00dd91d5f42424fd6007b4d3fb84ffbbde073a8cb77f
f9c6b10f3e4ebfe3566c25ab6b763a8792c9f14e7f7308b7dbd50c195f904fbfa919a175fa04431dd9cf58b73dcd6d4fe3ffdff73487f6f36d2773a8dfb8ed64
7ce8306e3b99fc70e5e3743265f3027d8d3af0c80e7af4b14f72f0d46749289dca0dc527421ffc08f83db398c0a092d3279eb838055cc5f0a8ca1c4c60e1228e
b48cc799fc0d91f134462b381daafb4a492472d591f0564cc0a1911e76ea5678ba4e4ed9223becacd7d5c16656590592e5782d2cc6e1a04a66e856bb3cc02bd4
6bb6913e68dd1250b2d721614c6693683a48b4b783ca48fa58178ce620a157f65158741d2c3a4afdd6557b2c805ae115f8c1edc1cff49e1f06200242701e07cd
f942f92973f5d6bbda991fd3d3878c69450034d8db08283ddd555c0f2e4fad2e0bb52b78da2261849b4d425b46377822869fc17974aad1abd0b8aeafbba54b2d
7aca147a3e08ad9246bbf33e1637f535c8ede6069a9a9982a6de65cf6f35430899395af5fc251c1ac363b282d811ea3717a211dcbccc25cf36fc4d32cb8a0b39
4222ce0cae934e960d122231f728497abe5a7ee1069aea1ca2b9d51b90103e59725d482b9f1a3970baed64bc5ce2b934dd6e8c284b67af90e1b35ce1fc568bdf
1cac24d91adc3d8d1797de195df3a708422c6cd795011744c0dd413db3e682c0655891c8caf8db294c79da356fa3740c65e388ae62945714339967709dca0b3a
faadb081f196af190c6a98242f8467912ab0a651ad6a5a548d8cc3c1aafb6121653923699635d3ca2aaa6abab39835c3b60cecd8f26645de60b53531e434b3c2
67a97b37e576b7b96ea74f28aa0418bcb09fa3ea5ea12018d4cac92c6a8af17e1a56393b1fb56bc776811fa07695226164fdd656ed8edd8a1ae19c0e066f54f9
416e376a6168b9ed2bb5a5f5adb979b1cdce5e40f2184197bba6526857c2c92e47d0104d754f92a50dd8222f65be35e0c95b73d2f3bfac85fd60d80887955a27
1c57826650ab74c27eb3d20fc3667d1cd66ba341e31514161927f530bbb19fc00506dde4f7f67a7cefee3ed9ded1dc99b3a4caf4dd7c5513d777f7f5c6e1bb7b
8f40d2f9b2d598749bdd41abd26df627956034e854bac3d6a0326a0ddba3c9681876ba9357be77a1c141bf390c5ae34ea5551f0e2b41aba6e877ba9576d068f4
8376bf330efaaff23606569ea58fdc16605ecdebde7f010000ffff0300504b0304140006000800000021000dd1909fb60000001b010000270000007468656d65
2f7468656d652f5f72656c732f7468656d654d616e616765722e786d6c2e72656c73848f4d0ac2301484f78277086f6fd3ba109126dd88d0add40384e4350d36
3f2451eced0dae2c082e8761be9969bb979dc9136332de3168aa1a083ae995719ac16db8ec8e4052164e89d93b64b060828e6f37ed1567914b284d262452282e
3198720e274a939cd08a54f980ae38a38f56e422a3a641c8bbd048f7757da0f19b017cc524bd62107bd5001996509affb3fd381a89672f1f165dfe514173d985
0528a2c6cce0239baa4c04ca5bbabac4df000000ffff0300504b01022d0014000600080000002100e9de0fbfff0000001c020000130000000000000000000000
0000000000005b436f6e74656e745f54797065735d2e786d6c504b01022d0014000600080000002100a5d6a7e7c0000000360100000b00000000000000000000
000000300100005f72656c732f2e72656c73504b01022d00140006000800000021006b799616830000008a0000001c0000000000000000000000000019020000
7468656d652f7468656d652f7468656d654d616e616765722e786d6c504b01022d0014000600080000002100b6f4679893070000c92000001600000000000000
000000000000d60200007468656d652f7468656d652f7468656d65312e786d6c504b01022d00140006000800000021000dd1909fb60000001b01000027000000
000000000000000000009d0a00007468656d652f7468656d652f5f72656c732f7468656d654d616e616765722e786d6c2e72656c73504b050600000000050005005d010000980b00000000}
{\*\colorschememapping 3c3f786d6c2076657273696f6e3d22312e302220656e636f64696e673d225554462d3822207374616e64616c6f6e653d22796573223f3e0d0a3c613a636c724d
617020786d6c6e733a613d22687474703a2f2f736368656d61732e6f70656e786d6c666f726d6174732e6f72672f64726177696e676d6c2f323030362f6d6169
6e22206267313d226c743122207478313d22646b3122206267323d226c743222207478323d22646b322220616363656e74313d22616363656e74312220616363
656e74323d22616363656e74322220616363656e74333d22616363656e74332220616363656e74343d22616363656e74342220616363656e74353d22616363656e74352220616363656e74363d22616363656e74362220686c696e6b3d22686c696e6b2220666f6c486c696e6b3d22666f6c486c696e6b222f3e}
{\*\latentstyles\lsdstimax376\lsdlockeddef0\lsdsemihiddendef0\lsdunhideuseddef0\lsdqformatdef0\lsdprioritydef99{\lsdlockedexcept \lsdqformat1 \lsdpriority0 \lsdlocked0 Normal;\lsdqformat1 \lsdpriority9 \lsdlocked0 heading 1;
\lsdsemihidden1 \lsdunhideused1 \lsdqformat1 \lsdpriority9 \lsdlocked0 heading 2;\lsdsemihidden1 \lsdunhideused1 \lsdqformat1 \lsdpriority9 \lsdlocked0 heading 3;\lsdsemihidden1 \lsdunhideused1 \lsdqformat1 \lsdpriority9 \lsdlocked0 heading 4;
\lsdsemihidden1 \lsdunhideused1 \lsdqformat1 \lsdpriority9 \lsdlocked0 heading 5;\lsdsemihidden1 \lsdunhideused1 \lsdqformat1 \lsdpriority9 \lsdlocked0 heading 6;\lsdsemihidden1 \lsdunhideused1 \lsdqformat1 \lsdpriority9 \lsdlocked0 heading 7;
\lsdsemihidden1 \lsdunhideused1 \lsdqformat1 \lsdpriority9 \lsdlocked0 heading 8;\lsdsemihidden1 \lsdunhideused1 \lsdqformat1 \lsdpriority9 \lsdlocked0 heading 9;\lsdsemihidden1 \lsdunhideused1 \lsdlocked0 index 1;
\lsdsemihidden1 \lsdunhideused1 \lsdlocked0 index 2;\lsdsemihidden1 \lsdunhideused1 \lsdlocked0 index 3;\lsdsemihidden1 \lsdunhideused1 \lsdlocked0 index 4;\lsdsemihidden1 \lsdunhideused1 \lsdlocked0 index 5;
\lsdsemihidden1 \lsdunhideused1 \lsdlocked0 index 6;\lsdsemihidden1 \lsdunhideused1 \lsdlocked0 index 7;\lsdsemihidden1 \lsdunhideused1 \lsdlocked0 index 8;\lsdsemihidden1 \lsdunhideused1 \lsdlocked0 index 9;
\lsdsemihidden1 \lsdunhideused1 \lsdpriority39 \lsdlocked0 toc 1;\lsdsemihidden1 \lsdunhideused1 \lsdpriority39 \lsdlocked0 toc 2;\lsdsemihidden1 \lsdunhideused1 \lsdpriority39 \lsdlocked0 toc 3;
\lsdsemihidden1 \lsdunhideused1 \lsdpriority39 \lsdlocked0 toc 4;\lsdsemihidden1 \lsdunhideused1 \lsdpriority39 \lsdlocked0 toc 5;\lsdsemihidden1 \lsdunhideused1 \lsdpriority39 \lsdlocked0 toc 6;
\lsdsemihidden1 \lsdunhideused1 \lsdpriority39 \lsdlocked0 toc 7;\lsdsemihidden1 \lsdunhideused1 \lsdpriority39 \lsdlocked0 toc 8;\lsdsemihidden1 \lsdunhideused1 \lsdpriority39 \lsdlocked0 toc 9;\lsdsemihidden1 \lsdunhideused1 \lsdlocked0 Normal Indent;
\lsdsemihidden1 \lsdunhideused1 \lsdlocked0 footnote text;\lsdsemihidden1 \lsdunhideused1 \lsdlocked0 annotation text;\lsdsemihidden1 \lsdunhideused1 \lsdlocked0 header;\lsdsemihidden1 \lsdunhideused1 \lsdlocked0 footer;
\lsdsemihidden1 \lsdunhideused1 \lsdlocked0 index heading;\lsdsemihidden1 \lsdunhideused1 \lsdqformat1 \lsdpriority35 \lsdlocked0 caption;\lsdsemihidden1 \lsdunhideused1 \lsdlocked0 table of figures;
\lsdsemihidden1 \lsdunhideused1 \lsdlocked0 envelope address;\lsdsemihidden1 \lsdunhideused1 \lsdlocked0 envelope return;\lsdsemihidden1 \lsdunhideused1 \lsdlocked0 footnote reference;\lsdsemihidden1 \lsdunhideused1 \lsdlocked0 annotation reference;
\lsdsemihidden1 \lsdunhideused1 \lsdlocked0 line number;\lsdsemihidden1 \lsdunhideused1 \lsdlocked0 page number;\lsdsemihidden1 \lsdunhideused1 \lsdlocked0 endnote reference;\lsdsemihidden1 \lsdunhideused1 \lsdlocked0 endnote text;
\lsdsemihidden1 \lsdunhideused1 \lsdlocked0 table of authorities;\lsdsemihidden1 \lsdunhideused1 \lsdlocked0 macro;\lsdsemihidden1 \lsdunhideused1 \lsdlocked0 toa heading;\lsdsemihidden1 \lsdunhideused1 \lsdlocked0 List;
\lsdsemihidden1 \lsdunhideused1 \lsdlocked0 List Bullet;\lsdsemihidden1 \lsdunhideused1 \lsdlocked0 List Number;\lsdsemihidden1 \lsdunhideused1 \lsdlocked0 List 2;\lsdsemihidden1 \lsdunhideused1 \lsdlocked0 List 3;
\lsdsemihidden1 \lsdunhideused1 \lsdlocked0 List 4;\lsdsemihidden1 \lsdunhideused1 \lsdlocked0 List 5;\lsdsemihidden1 \lsdunhideused1 \lsdlocked0 List Bullet 2;\lsdsemihidden1 \lsdunhideused1 \lsdlocked0 List Bullet 3;
\lsdsemihidden1 \lsdunhideused1 \lsdlocked0 List Bullet 4;\lsdsemihidden1 \lsdunhideused1 \lsdlocked0 List Bullet 5;\lsdsemihidden1 \lsdunhideused1 \lsdlocked0 List Number 2;\lsdsemihidden1 \lsdunhideused1 \lsdlocked0 List Number 3;
\lsdsemihidden1 \lsdunhideused1 \lsdlocked0 List Number 4;\lsdsemihidden1 \lsdunhideused1 \lsdlocked0 List Number 5;\lsdqformat1 \lsdpriority10 \lsdlocked0 Title;\lsdsemihidden1 \lsdunhideused1 \lsdlocked0 Closing;
\lsdsemihidden1 \lsdunhideused1 \lsdlocked0 Signature;\lsdsemihidden1 \lsdunhideused1 \lsdpriority1 \lsdlocked0 Default Paragraph Font;\lsdsemihidden1 \lsdunhideused1 \lsdlocked0 Body Text;\lsdsemihidden1 \lsdunhideused1 \lsdlocked0 Body Text Indent;
\lsdsemihidden1 \lsdunhideused1 \lsdlocked0 List Continue;\lsdsemihidden1 \lsdunhideused1 \lsdlocked0 List Continue 2;\lsdsemihidden1 \lsdunhideused1 \lsdlocked0 List Continue 3;\lsdsemihidden1 \lsdunhideused1 \lsdlocked0 List Continue 4;
\lsdsemihidden1 \lsdunhideused1 \lsdlocked0 List Continue 5;\lsdsemihidden1 \lsdunhideused1 \lsdlocked0 Message Header;\lsdqformat1 \lsdpriority11 \lsdlocked0 Subtitle;\lsdsemihidden1 \lsdunhideused1 \lsdlocked0 Salutation;
\lsdsemihidden1 \lsdunhideused1 \lsdlocked0 Date;\lsdsemihidden1 \lsdunhideused1 \lsdlocked0 Body Text First Indent;\lsdsemihidden1 \lsdunhideused1 \lsdlocked0 Body Text First Indent 2;\lsdsemihidden1 \lsdunhideused1 \lsdlocked0 Note Heading;
\lsdsemihidden1 \lsdunhideused1 \lsdlocked0 Body Text 2;\lsdsemihidden1 \lsdunhideused1 \lsdlocked0 Body Text 3;\lsdsemihidden1 \lsdunhideused1 \lsdlocked0 Body Text Indent 2;\lsdsemihidden1 \lsdunhideused1 \lsdlocked0 Body Text Indent 3;
\lsdsemihidden1 \lsdunhideused1 \lsdlocked0 Block Text;\lsdsemihidden1 \lsdunhideused1 \lsdlocked0 Hyperlink;\lsdsemihidden1 \lsdunhideused1 \lsdlocked0 FollowedHyperlink;\lsdqformat1 \lsdpriority22 \lsdlocked0 Strong;
\lsdqformat1 \lsdpriority20 \lsdlocked0 Emphasis;\lsdsemihidden1 \lsdunhideused1 \lsdlocked0 Document Map;\lsdsemihidden1 \lsdunhideused1 \lsdlocked0 Plain Text;\lsdsemihidden1 \lsdunhideused1 \lsdlocked0 E-mail Signature;
\lsdsemihidden1 \lsdunhideused1 \lsdlocked0 HTML Top of Form;\lsdsemihidden1 \lsdunhideused1 \lsdlocked0 HTML Bottom of Form;\lsdsemihidden1 \lsdunhideused1 \lsdlocked0 Normal (Web);\lsdsemihidden1 \lsdunhideused1 \lsdlocked0 HTML Acronym;
\lsdsemihidden1 \lsdunhideused1 \lsdlocked0 HTML Address;\lsdsemihidden1 \lsdunhideused1 \lsdlocked0 HTML Cite;\lsdsemihidden1 \lsdunhideused1 \lsdlocked0 HTML Code;\lsdsemihidden1 \lsdunhideused1 \lsdlocked0 HTML Definition;
\lsdsemihidden1 \lsdunhideused1 \lsdlocked0 HTML Keyboard;\lsdsemihidden1 \lsdunhideused1 \lsdlocked0 HTML Preformatted;\lsdsemihidden1 \lsdunhideused1 \lsdlocked0 HTML Sample;\lsdsemihidden1 \lsdunhideused1 \lsdlocked0 HTML Typewriter;
\lsdsemihidden1 \lsdunhideused1 \lsdlocked0 HTML Variable;\lsdsemihidden1 \lsdunhideused1 \lsdlocked0 Normal Table;\lsdsemihidden1 \lsdunhideused1 \lsdlocked0 annotation subject;\lsdsemihidden1 \lsdunhideused1 \lsdlocked0 No List;
\lsdsemihidden1 \lsdunhideused1 \lsdlocked0 Outline List 1;\lsdsemihidden1 \lsdunhideused1 \lsdlocked0 Outline List 2;\lsdsemihidden1 \lsdunhideused1 \lsdlocked0 Outline List 3;\lsdsemihidden1 \lsdunhideused1 \lsdlocked0 Table Simple 1;
\lsdsemihidden1 \lsdunhideused1 \lsdlocked0 Table Simple 2;\lsdsemihidden1 \lsdunhideused1 \lsdlocked0 Table Simple 3;\lsdsemihidden1 \lsdunhideused1 \lsdlocked0 Table Classic 1;\lsdsemihidden1 \lsdunhideused1 \lsdlocked0 Table Classic 2;
\lsdsemihidden1 \lsdunhideused1 \lsdlocked0 Table Classic 3;\lsdsemihidden1 \lsdunhideused1 \lsdlocked0 Table Classic 4;\lsdsemihidden1 \lsdunhideused1 \lsdlocked0 Table Colorful 1;\lsdsemihidden1 \lsdunhideused1 \lsdlocked0 Table Colorful 2;
\lsdsemihidden1 \lsdunhideused1 \lsdlocked0 Table Colorful 3;\lsdsemihidden1 \lsdunhideused1 \lsdlocked0 Table Columns 1;\lsdsemihidden1 \lsdunhideused1 \lsdlocked0 Table Columns 2;\lsdsemihidden1 \lsdunhideused1 \lsdlocked0 Table Columns 3;
\lsdsemihidden1 \lsdunhideused1 \lsdlocked0 Table Columns 4;\lsdsemihidden1 \lsdunhideused1 \lsdlocked0 Table Columns 5;\lsdsemihidden1 \lsdunhideused1 \lsdlocked0 Table Grid 1;\lsdsemihidden1 \lsdunhideused1 \lsdlocked0 Table Grid 2;
\lsdsemihidden1 \lsdunhideused1 \lsdlocked0 Table Grid 3;\lsdsemihidden1 \lsdunhideused1 \lsdlocked0 Table Grid 4;\lsdsemihidden1 \lsdunhideused1 \lsdlocked0 Table Grid 5;\lsdsemihidden1 \lsdunhideused1 \lsdlocked0 Table Grid 6;
\lsdsemihidden1 \lsdunhideused1 \lsdlocked0 Table Grid 7;\lsdsemihidden1 \lsdunhideused1 \lsdlocked0 Table Grid 8;\lsdsemihidden1 \lsdunhideused1 \lsdlocked0 Table List 1;\lsdsemihidden1 \lsdunhideused1 \lsdlocked0 Table List 2;
\lsdsemihidden1 \lsdunhideused1 \lsdlocked0 Table List 3;\lsdsemihidden1 \lsdunhideused1 \lsdlocked0 Table List 4;\lsdsemihidden1 \lsdunhideused1 \lsdlocked0 Table List 5;\lsdsemihidden1 \lsdunhideused1 \lsdlocked0 Table List 6;
\lsdsemihidden1 \lsdunhideused1 \lsdlocked0 Table List 7;\lsdsemihidden1 \lsdunhideused1 \lsdlocked0 Table List 8;\lsdsemihidden1 \lsdunhideused1 \lsdlocked0 Table 3D effects 1;\lsdsemihidden1 \lsdunhideused1 \lsdlocked0 Table 3D effects 2;
\lsdsemihidden1 \lsdunhideused1 \lsdlocked0 Table 3D effects 3;\lsdsemihidden1 \lsdunhideused1 \lsdlocked0 Table Contemporary;\lsdsemihidden1 \lsdunhideused1 \lsdlocked0 Table Elegant;\lsdsemihidden1 \lsdunhideused1 \lsdlocked0 Table Professional;
\lsdsemihidden1 \lsdunhideused1 \lsdlocked0 Table Subtle 1;\lsdsemihidden1 \lsdunhideused1 \lsdlocked0 Table Subtle 2;\lsdsemihidden1 \lsdunhideused1 \lsdlocked0 Table Web 1;\lsdsemihidden1 \lsdunhideused1 \lsdlocked0 Table Web 2;
\lsdsemihidden1 \lsdunhideused1 \lsdlocked0 Table Web 3;\lsdsemihidden1 \lsdunhideused1 \lsdlocked0 Balloon Text;\lsdpriority39 \lsdlocked0 Table Grid;\lsdsemihidden1 \lsdunhideused1 \lsdlocked0 Table Theme;\lsdsemihidden1 \lsdlocked0 Placeholder Text;
\lsdqformat1 \lsdpriority1 \lsdlocked0 No Spacing;\lsdpriority60 \lsdlocked0 Light Shading;\lsdpriority61 \lsdlocked0 Light List;\lsdpriority62 \lsdlocked0 Light Grid;\lsdpriority63 \lsdlocked0 Medium Shading 1;\lsdpriority64 \lsdlocked0 Medium Shading 2;
\lsdpriority65 \lsdlocked0 Medium List 1;\lsdpriority66 \lsdlocked0 Medium List 2;\lsdpriority67 \lsdlocked0 Medium Grid 1;\lsdpriority68 \lsdlocked0 Medium Grid 2;\lsdpriority69 \lsdlocked0 Medium Grid 3;\lsdpriority70 \lsdlocked0 Dark List;
\lsdpriority71 \lsdlocked0 Colorful Shading;\lsdpriority72 \lsdlocked0 Colorful List;\lsdpriority73 \lsdlocked0 Colorful Grid;\lsdpriority60 \lsdlocked0 Light Shading Accent 1;\lsdpriority61 \lsdlocked0 Light List Accent 1;
\lsdpriority62 \lsdlocked0 Light Grid Accent 1;\lsdpriority63 \lsdlocked0 Medium Shading 1 Accent 1;\lsdpriority64 \lsdlocked0 Medium Shading 2 Accent 1;\lsdpriority65 \lsdlocked0 Medium List 1 Accent 1;\lsdsemihidden1 \lsdlocked0 Revision;
\lsdqformat1 \lsdpriority34 \lsdlocked0 List Paragraph;\lsdqformat1 \lsdpriority29 \lsdlocked0 Quote;\lsdqformat1 \lsdpriority30 \lsdlocked0 Intense Quote;\lsdpriority66 \lsdlocked0 Medium List 2 Accent 1;\lsdpriority67 \lsdlocked0 Medium Grid 1 Accent 1;
\lsdpriority68 \lsdlocked0 Medium Grid 2 Accent 1;\lsdpriority69 \lsdlocked0 Medium Grid 3 Accent 1;\lsdpriority70 \lsdlocked0 Dark List Accent 1;\lsdpriority71 \lsdlocked0 Colorful Shading Accent 1;\lsdpriority72 \lsdlocked0 Colorful List Accent 1;
\lsdpriority73 \lsdlocked0 Colorful Grid Accent 1;\lsdpriority60 \lsdlocked0 Light Shading Accent 2;\lsdpriority61 \lsdlocked0 Light List Accent 2;\lsdpriority62 \lsdlocked0 Light Grid Accent 2;\lsdpriority63 \lsdlocked0 Medium Shading 1 Accent 2;
\lsdpriority64 \lsdlocked0 Medium Shading 2 Accent 2;\lsdpriority65 \lsdlocked0 Medium List 1 Accent 2;\lsdpriority66 \lsdlocked0 Medium List 2 Accent 2;\lsdpriority67 \lsdlocked0 Medium Grid 1 Accent 2;\lsdpriority68 \lsdlocked0 Medium Grid 2 Accent 2;
\lsdpriority69 \lsdlocked0 Medium Grid 3 Accent 2;\lsdpriority70 \lsdlocked0 Dark List Accent 2;\lsdpriority71 \lsdlocked0 Colorful Shading Accent 2;\lsdpriority72 \lsdlocked0 Colorful List Accent 2;\lsdpriority73 \lsdlocked0 Colorful Grid Accent 2;
\lsdpriority60 \lsdlocked0 Light Shading Accent 3;\lsdpriority61 \lsdlocked0 Light List Accent 3;\lsdpriority62 \lsdlocked0 Light Grid Accent 3;\lsdpriority63 \lsdlocked0 Medium Shading 1 Accent 3;\lsdpriority64 \lsdlocked0 Medium Shading 2 Accent 3;
\lsdpriority65 \lsdlocked0 Medium List 1 Accent 3;\lsdpriority66 \lsdlocked0 Medium List 2 Accent 3;\lsdpriority67 \lsdlocked0 Medium Grid 1 Accent 3;\lsdpriority68 \lsdlocked0 Medium Grid 2 Accent 3;\lsdpriority69 \lsdlocked0 Medium Grid 3 Accent 3;
\lsdpriority70 \lsdlocked0 Dark List Accent 3;\lsdpriority71 \lsdlocked0 Colorful Shading Accent 3;\lsdpriority72 \lsdlocked0 Colorful List Accent 3;\lsdpriority73 \lsdlocked0 Colorful Grid Accent 3;\lsdpriority60 \lsdlocked0 Light Shading Accent 4;
\lsdpriority61 \lsdlocked0 Light List Accent 4;\lsdpriority62 \lsdlocked0 Light Grid Accent 4;\lsdpriority63 \lsdlocked0 Medium Shading 1 Accent 4;\lsdpriority64 \lsdlocked0 Medium Shading 2 Accent 4;\lsdpriority65 \lsdlocked0 Medium List 1 Accent 4;
\lsdpriority66 \lsdlocked0 Medium List 2 Accent 4;\lsdpriority67 \lsdlocked0 Medium Grid 1 Accent 4;\lsdpriority68 \lsdlocked0 Medium Grid 2 Accent 4;\lsdpriority69 \lsdlocked0 Medium Grid 3 Accent 4;\lsdpriority70 \lsdlocked0 Dark List Accent 4;
\lsdpriority71 \lsdlocked0 Colorful Shading Accent 4;\lsdpriority72 \lsdlocked0 Colorful List Accent 4;\lsdpriority73 \lsdlocked0 Colorful Grid Accent 4;\lsdpriority60 \lsdlocked0 Light Shading Accent 5;\lsdpriority61 \lsdlocked0 Light List Accent 5;
\lsdpriority62 \lsdlocked0 Light Grid Accent 5;\lsdpriority63 \lsdlocked0 Medium Shading 1 Accent 5;\lsdpriority64 \lsdlocked0 Medium Shading 2 Accent 5;\lsdpriority65 \lsdlocked0 Medium List 1 Accent 5;\lsdpriority66 \lsdlocked0 Medium List 2 Accent 5;
\lsdpriority67 \lsdlocked0 Medium Grid 1 Accent 5;\lsdpriority68 \lsdlocked0 Medium Grid 2 Accent 5;\lsdpriority69 \lsdlocked0 Medium Grid 3 Accent 5;\lsdpriority70 \lsdlocked0 Dark List Accent 5;\lsdpriority71 \lsdlocked0 Colorful Shading Accent 5;
\lsdpriority72 \lsdlocked0 Colorful List Accent 5;\lsdpriority73 \lsdlocked0 Colorful Grid Accent 5;\lsdpriority60 \lsdlocked0 Light Shading Accent 6;\lsdpriority61 \lsdlocked0 Light List Accent 6;\lsdpriority62 \lsdlocked0 Light Grid Accent 6;
\lsdpriority63 \lsdlocked0 Medium Shading 1 Accent 6;\lsdpriority64 \lsdlocked0 Medium Shading 2 Accent 6;\lsdpriority65 \lsdlocked0 Medium List 1 Accent 6;\lsdpriority66 \lsdlocked0 Medium List 2 Accent 6;
\lsdpriority67 \lsdlocked0 Medium Grid 1 Accent 6;\lsdpriority68 \lsdlocked0 Medium Grid 2 Accent 6;\lsdpriority69 \lsdlocked0 Medium Grid 3 Accent 6;\lsdpriority70 \lsdlocked0 Dark List Accent 6;\lsdpriority71 \lsdlocked0 Colorful Shading Accent 6;
\lsdpriority72 \lsdlocked0 Colorful List Accent 6;\lsdpriority73 \lsdlocked0 Colorful Grid Accent 6;\lsdqformat1 \lsdpriority19 \lsdlocked0 Subtle Emphasis;\lsdqformat1 \lsdpriority21 \lsdlocked0 Intense Emphasis;
\lsdqformat1 \lsdpriority31 \lsdlocked0 Subtle Reference;\lsdqformat1 \lsdpriority32 \lsdlocked0 Intense Reference;\lsdqformat1 \lsdpriority33 \lsdlocked0 Book Title;\lsdsemihidden1 \lsdunhideused1 \lsdpriority37 \lsdlocked0 Bibliography;
\lsdsemihidden1 \lsdunhideused1 \lsdqformat1 \lsdpriority39 \lsdlocked0 TOC Heading;\lsdpriority41 \lsdlocked0 Plain Table 1;\lsdpriority42 \lsdlocked0 Plain Table 2;\lsdpriority43 \lsdlocked0 Plain Table 3;\lsdpriority44 \lsdlocked0 Plain Table 4;
\lsdpriority45 \lsdlocked0 Plain Table 5;\lsdpriority40 \lsdlocked0 Grid Table Light;\lsdpriority46 \lsdlocked0 Grid Table 1 Light;\lsdpriority47 \lsdlocked0 Grid Table 2;\lsdpriority48 \lsdlocked0 Grid Table 3;\lsdpriority49 \lsdlocked0 Grid Table 4;
\lsdpriority50 \lsdlocked0 Grid Table 5 Dark;\lsdpriority51 \lsdlocked0 Grid Table 6 Colorful;\lsdpriority52 \lsdlocked0 Grid Table 7 Colorful;\lsdpriority46 \lsdlocked0 Grid Table 1 Light Accent 1;\lsdpriority47 \lsdlocked0 Grid Table 2 Accent 1;
\lsdpriority48 \lsdlocked0 Grid Table 3 Accent 1;\lsdpriority49 \lsdlocked0 Grid Table 4 Accent 1;\lsdpriority50 \lsdlocked0 Grid Table 5 Dark Accent 1;\lsdpriority51 \lsdlocked0 Grid Table 6 Colorful Accent 1;
\lsdpriority52 \lsdlocked0 Grid Table 7 Colorful Accent 1;\lsdpriority46 \lsdlocked0 Grid Table 1 Light Accent 2;\lsdpriority47 \lsdlocked0 Grid Table 2 Accent 2;\lsdpriority48 \lsdlocked0 Grid Table 3 Accent 2;
\lsdpriority49 \lsdlocked0 Grid Table 4 Accent 2;\lsdpriority50 \lsdlocked0 Grid Table 5 Dark Accent 2;\lsdpriority51 \lsdlocked0 Grid Table 6 Colorful Accent 2;\lsdpriority52 \lsdlocked0 Grid Table 7 Colorful Accent 2;
\lsdpriority46 \lsdlocked0 Grid Table 1 Light Accent 3;\lsdpriority47 \lsdlocked0 Grid Table 2 Accent 3;\lsdpriority48 \lsdlocked0 Grid Table 3 Accent 3;\lsdpriority49 \lsdlocked0 Grid Table 4 Accent 3;
\lsdpriority50 \lsdlocked0 Grid Table 5 Dark Accent 3;\lsdpriority51 \lsdlocked0 Grid Table 6 Colorful Accent 3;\lsdpriority52 \lsdlocked0 Grid Table 7 Colorful Accent 3;\lsdpriority46 \lsdlocked0 Grid Table 1 Light Accent 4;
\lsdpriority47 \lsdlocked0 Grid Table 2 Accent 4;\lsdpriority48 \lsdlocked0 Grid Table 3 Accent 4;\lsdpriority49 \lsdlocked0 Grid Table 4 Accent 4;\lsdpriority50 \lsdlocked0 Grid Table 5 Dark Accent 4;
\lsdpriority51 \lsdlocked0 Grid Table 6 Colorful Accent 4;\lsdpriority52 \lsdlocked0 Grid Table 7 Colorful Accent 4;\lsdpriority46 \lsdlocked0 Grid Table 1 Light Accent 5;\lsdpriority47 \lsdlocked0 Grid Table 2 Accent 5;
\lsdpriority48 \lsdlocked0 Grid Table 3 Accent 5;\lsdpriority49 \lsdlocked0 Grid Table 4 Accent 5;\lsdpriority50 \lsdlocked0 Grid Table 5 Dark Accent 5;\lsdpriority51 \lsdlocked0 Grid Table 6 Colorful Accent 5;
\lsdpriority52 \lsdlocked0 Grid Table 7 Colorful Accent 5;\lsdpriority46 \lsdlocked0 Grid Table 1 Light Accent 6;\lsdpriority47 \lsdlocked0 Grid Table 2 Accent 6;\lsdpriority48 \lsdlocked0 Grid Table 3 Accent 6;
\lsdpriority49 \lsdlocked0 Grid Table 4 Accent 6;\lsdpriority50 \lsdlocked0 Grid Table 5 Dark Accent 6;\lsdpriority51 \lsdlocked0 Grid Table 6 Colorful Accent 6;\lsdpriority52 \lsdlocked0 Grid Table 7 Colorful Accent 6;
\lsdpriority46 \lsdlocked0 List Table 1 Light;\lsdpriority47 \lsdlocked0 List Table 2;\lsdpriority48 \lsdlocked0 List Table 3;\lsdpriority49 \lsdlocked0 List Table 4;\lsdpriority50 \lsdlocked0 List Table 5 Dark;
\lsdpriority51 \lsdlocked0 List Table 6 Colorful;\lsdpriority52 \lsdlocked0 List Table 7 Colorful;\lsdpriority46 \lsdlocked0 List Table 1 Light Accent 1;\lsdpriority47 \lsdlocked0 List Table 2 Accent 1;\lsdpriority48 \lsdlocked0 List Table 3 Accent 1;
\lsdpriority49 \lsdlocked0 List Table 4 Accent 1;\lsdpriority50 \lsdlocked0 List Table 5 Dark Accent 1;\lsdpriority51 \lsdlocked0 List Table 6 Colorful Accent 1;\lsdpriority52 \lsdlocked0 List Table 7 Colorful Accent 1;
\lsdpriority46 \lsdlocked0 List Table 1 Light Accent 2;\lsdpriority47 \lsdlocked0 List Table 2 Accent 2;\lsdpriority48 \lsdlocked0 List Table 3 Accent 2;\lsdpriority49 \lsdlocked0 List Table 4 Accent 2;
\lsdpriority50 \lsdlocked0 List Table 5 Dark Accent 2;\lsdpriority51 \lsdlocked0 List Table 6 Colorful Accent 2;\lsdpriority52 \lsdlocked0 List Table 7 Colorful Accent 2;\lsdpriority46 \lsdlocked0 List Table 1 Light Accent 3;
\lsdpriority47 \lsdlocked0 List Table 2 Accent 3;\lsdpriority48 \lsdlocked0 List Table 3 Accent 3;\lsdpriority49 \lsdlocked0 List Table 4 Accent 3;\lsdpriority50 \lsdlocked0 List Table 5 Dark Accent 3;
\lsdpriority51 \lsdlocked0 List Table 6 Colorful Accent 3;\lsdpriority52 \lsdlocked0 List Table 7 Colorful Accent 3;\lsdpriority46 \lsdlocked0 List Table 1 Light Accent 4;\lsdpriority47 \lsdlocked0 List Table 2 Accent 4;
\lsdpriority48 \lsdlocked0 List Table 3 Accent 4;\lsdpriority49 \lsdlocked0 List Table 4 Accent 4;\lsdpriority50 \lsdlocked0 List Table 5 Dark Accent 4;\lsdpriority51 \lsdlocked0 List Table 6 Colorful Accent 4;
\lsdpriority52 \lsdlocked0 List Table 7 Colorful Accent 4;\lsdpriority46 \lsdlocked0 List Table 1 Light Accent 5;\lsdpriority47 \lsdlocked0 List Table 2 Accent 5;\lsdpriority48 \lsdlocked0 List Table 3 Accent 5;
\lsdpriority49 \lsdlocked0 List Table 4 Accent 5;\lsdpriority50 \lsdlocked0 List Table 5 Dark Accent 5;\lsdpriority51 \lsdlocked0 List Table 6 Colorful Accent 5;\lsdpriority52 \lsdlocked0 List Table 7 Colorful Accent 5;
\lsdpriority46 \lsdlocked0 List Table 1 Light Accent 6;\lsdpriority47 \lsdlocked0 List Table 2 Accent 6;\lsdpriority48 \lsdlocked0 List Table 3 Accent 6;\lsdpriority49 \lsdlocked0 List Table 4 Accent 6;
\lsdpriority50 \lsdlocked0 List Table 5 Dark Accent 6;\lsdpriority51 \lsdlocked0 List Table 6 Colorful Accent 6;\lsdpriority52 \lsdlocked0 List Table 7 Colorful Accent 6;\lsdsemihidden1 \lsdunhideused1 \lsdlocked0 Mention;
\lsdsemihidden1 \lsdunhideused1 \lsdlocked0 Smart Hyperlink;\lsdsemihidden1 \lsdunhideused1 \lsdlocked0 Hashtag;\lsdsemihidden1 \lsdunhideused1 \lsdlocked0 Unresolved Mention;\lsdsemihidden1 \lsdunhideused1 \lsdlocked0 Smart Link;}}{\*\datastore 01050000
02000000180000004d73786d6c322e534158584d4c5265616465722e362e3000000000000000000000060000
d0cf11e0a1b11ae1000000000000000000000000000000003e000300feff090006000000000000000000000001000000010000000000000000100000feffffff00000000feffffff0000000000000000ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
fffffffffffffffffdfffffffeffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffff52006f006f007400200045006e00740072007900000000000000000000000000000000000000000000000000000000000000000000000000000000000000000016000500ffffffffffffffffffffffff0c6ad98892f1d411a65f0040963251e50000000000000000000000008061
3fdfde0ad801feffffff00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000ffffffffffffffffffffffff00000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000ffffffffffffffffffffffff0000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000ffffffffffffffffffffffff000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000105000000000000}}